<!DOCTYPE html>
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        meta(http-equiv="X-UA-Compatible", content="ie=edge")
        title Main_too_examine
        link(rel="icon" type="image/png" href="images/favicon.png")
        link(href="css/main.css" type="text/css" rel="stylesheet")
        script(src="https://cdn.jsdelivr.net/npm/vue")
        
body
header Front-end developer.
main#tabs
    nav
        button.tab Main.
        button.tab Plan.
        button.tab Tools
        button.tab Type site
        button.tab Info
        button.tab HTML / PUG / Mrkdovn
        button.tab CSS / Stylus
        button.tab JavaScript
        button.tab Vue.js
        button.tab jQuery
        button.tab Python
        button.tab Java
        button.tab SQL
        button.tab Shell
        button.tab Keyword
        button.tab Library
        button.tab Contact
        button.tab Pri_Va_Te
    section.tabContent
        |
        img(src="images/tree.png", alt="tree" class="center-img" width="auto" height="400")


    section.tabContent
        |
        h1 План разработки (реальный)-
        p Разработка <span>SPA</span> по методологии 
            a(href="http://www.dpgrup.ru/methodology-rup.htm" target="_blank") RUP 
            | . 
        p Разметка <span>HTML</span> на шаблонизаторе 
            a(href="https://pugjs.org/api/getting-started.html" target="_blank") Pug 
            | .
        p Написание стилей <span>CSS</span> на препроцессоре 
            a(href="http://stylus-lang.com/" target="_blank") Stylus 
            | по системе 
            a(href="https://smacss.com/" target="_blank") SMACSS 
            | и 
            a(href="https://ru.bem.info/" target="_blank") BEM 
            | . 
        p Интерактивность на <span>JavaScript</span> 
            | по стандарту 
            a(href="" target="_blank") ES6 
            | . 

        br
        hr
        h1 План разработки (общий)
        p Разработка <span>SPA</span> или <span>RIA</span> по методологии 
            a(href="http://www.dpgrup.ru/methodology-rup.htm" target="_blank") RUP 
            | быстро. 
        p Создание схемы сайта 
            a(href="http://www.uml.org/" target="_blank") UML 
            | в <span>www.draw.io</span>.
        p Создание <span>UI</span> схемы (wireframes) в Axure & www.app.moqups.com.
        p Создание <span>UI</span> дизайна в GIMP, Inkscape, Blender ; в стиле - минимализм и типографика.
        p Разметка <span>HTML</span> на 
            a(href="https://pugjs.org/api/getting-started.html" target="_blank") Pug 
            | .
        p Добавление модулей <span>CSS</span> на 
            a(href="https://getuikit.com/" target="_blank") UiKit 
            | .
        p Написание стилей <span>CSS</span> на препроцессоре 
            a(href="http://stylus-lang.com/" target="_blank") Stylus 
            | по системе SMACSS и BEM.
        p Добавление интерактивности на 
            a(href="https://ru.vuejs.org/" target="_blank") Vue 
            | по методологии 
            a(href="https://vuex.vuejs.org/ru/intro.html" target="_blank") Vuex 
            | (или на фреймверке 
            a(href="https://ru.nuxtjs.org/" target="_blank")  Nuxt 
            |)
        p Подключение 
            a(href="https://babeljs.io/" target="_blank") Babel 
            | для интеграции 
            a(href="" target="_blank") ES6 
            | .
        p Написание логики на 
            a(href="https://www.python.org/" target="_blank") Python 
            | согласно 
            a(href="" target="_blank") OOP 
            | , 
            a(href="" target="_blank") SOLID 
            | , 
            a(href="" target="_blank") DRY 
            | , 
            a(href="" target="_blank") KISS 
            | , 
            a(href="" target="_blank") YAGNI 
            | по стандарту 
            a(href="" target="_blank") PEP-8 
            | или на фреймверке 
            a(href="https://djbook.ru/" target="_blank") Django 
            | .
        p Создание таблиц Баз данных на 
            a(href="https://sqlite.org/" target="_blank") SQLite 
            | по стандарту <span>PEP 249</span> на основе 
            a(href="http://www.sql-ex.ru" target="_blank") SQL 
            | .
        p Установка пакетов через 
            a(href="https://www.npmjs.com/" target="_blank") Npm 
            | и 
            a(href="https://pip.pypa.io/en/stable/" target="_blank") Pip 
            | при необходимости.
        p Сборка сайта с помощью 
            a(href="https://webpack.github.io/" target="_blank") Webpack 
            | конфигурирование <span>Json</span>.
        p Создания контроля версий 
            a(href="https://git-scm.com/" target="_blank") Git 
            | и работа с ним по методологии 
            a(href="https://danielkummer.github.io/git-flow-cheatsheet/index.ru_RU.html" target="_blank") Git flow 
            | .
        p Тестирование <span>HTML</span> С помощью validator.w3.org и <span>Javascript</span> с помощью 
            a(href="http://jshint.com/" target="_blank") Jshint 
            | .
        p Тестирование <span>SPA</span> с помощью 
            a(href="https://jasmine.github.io/" target="_blank") Jasmine 
            | & 
            a(href="https://karma-runner.github.io/1.0/index.html" target="_blank") Karma
            | .
        p Раскрутка <span>SPA</span> с помощью SEO.
    section.tabContent 
        h1 Технологии
        table(align="center")
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i прототипирование
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td(style="border-top: 1px dashed #1f1f28;") wireframes
                td(style="border-top: 1px dashed #1f1f28;") Axure
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") wireframes
                td(style="border-bottom: 1px dashed #1f1f28;") www.app.moqups.com
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i дизайн
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td UI графика (растровая)
                td Adobe Photoshop
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") UI графика (3D)
                td(style="border-bottom: 1px dashed #1f1f28;") MAXON Cinema 4D
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i схема приложения
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") UML
                td(style="border-bottom: 1px dashed #1f1f28;") 	www.draw.io
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i разметка
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td Язык гипертекстовой разметки
                td
                    a(href="" tooltip='HyperText Markup Language — язык гипертекстовой разметки') HTML
            tr
                td Шаблонизатор HTML
                td Pug  
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") Разметка
                td(style="border-bottom: 1px dashed #1f1f28;") Markdown
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i стили
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td Каскадная таблица стилей
                td 
                    a(href="" tooltip='Cascading Style Sheets — каскадные таблицы стилей') CSS
            tr
                td Препроессор CSS
                td Stylus
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") Фреймверк CSS
                td(style="border-bottom: 1px dashed #1f1f28;") UiKit
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i библиотека
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td Библиотека JS
                td Vue.js
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") Библиотека JS
                td(style="border-bottom: 1px dashed #1f1f28;") Jquery
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i фреймверк
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") Фреймверк Python
                td(style="border-bottom: 1px dashed #1f1f28;") 	Django
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i методология
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td Методология CSS
                td 
                    a(href="" tooltip='Scalable and Modular Architecture for CSS') SMACSS
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") Методология CSS
                td(style="border-bottom: 1px dashed #1f1f28;") 
                    a(href="" tooltip='Блок, элемент, модификатор') BEM
            tr
                td Методология Vue
                td Vuex
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") Методология Git
                td(style="border-bottom: 1px dashed #1f1f28;") Git flow
            tr
                td Методология JS/Py
                td 
                    a(href="" tooltip='Object-oriented programming') OOP
            tr
                td Методология JS/Py
                td 
                    a(href="" tooltip='The Single Responsibility Principle / The Open Closed Principle / The Liskov Substitution Principle / The Interface Segregation Principle / The Dependency Inversion Principle') SOLID
            tr
                td Методология JS/Py
                td 
                    a(href="" tooltip='Don*t repeat yourself') DRY
            tr
                td Методология JS/Py
                td 
                    a(href="" tooltip='Keep It Simple, Stupid') KISS
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") Методология JS/Py
                td(style="border-bottom: 1px dashed #1f1f28;") 
                    a(href="" tooltip='You aren*t gonna need it') YAGNI
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i язык разработки
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td Язык
                td Englis
            tr
                td Язык програмирования (клиент)
                td JavaScript
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") Язык програмирования (сервер)
                td(style="border-bottom: 1px dashed #1f1f28;") Python
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i пакетный менеджер
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td Пакетный менеджер JS
                td 
                    a(href="" tooltip='Node.js Package Manager') Npm
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") Пакетный менеджер Py
                td(style="border-bottom: 1px dashed #1f1f28;") 
                    a(href="" tooltip=' installing Python packages') Pip
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i база данных
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td База данных (легкая/сервер)
                td SQLite
            tr
                td База данных (клиент)
                td MySQL
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") База данных (сервер)
                td(style="border-bottom: 1px dashed #1f1f28;") PostgreSQL
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i сборщик проекта
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") Сборщик проекта
                td(style="border-bottom: 1px dashed #1f1f28;") Webpack
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i ситема контроля версий
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") Система контроля версий
                td(style="border-bottom: 1px dashed #1f1f28;") Git
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i soft
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td Среда разработки (текстовый редактор)
                td Visual Studio Code
            tr
                td Среда разработки (базы данных)
                td DBeaver
            tr
                td Среда разработки (браузер)
                td Firefox developer edition
            tr
                td Инструмент разработчика (в браузер)
                td DevTools
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") Среда разработки (работа с файлами)
                td(style="border-bottom: 1px dashed #1f1f28;") FAR
            tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i портативность настроек
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td(style="border-bottom: 1px dashed #1f1f28;") менеджер среды разработки
                td(style="border-bottom: 1px dashed #1f1f28;") Docker
                tr
                td(style="border-bottom: 1px solid #90a4ae; text-align: center;") 
                    b 
                        i интерпритатор
                td(style="border-bottom: 1px solid #90a4ae;") 
            tr
                td интерпритатор JS
                td Babel

    section.tabContent
        h1 Сайт
        ul
            li.li_name_cont Сайт визитка
               ul.ul_italic
                    li Landing Page
                    li Промо сайт
                    li Имиджевый сайт
                    li Персональный сайт
            li.li_name_cont Интернет магазин
            li.li_name_cont Корпоративный сайт
            li.li_name_cont Портал
                ul.ul_italic
                    li Блог
                    li Форум
                    li Социальная сеть
                    li Хостинг
            li.li_name_cont SPA
        textarea 
            | "КАТЕГОРИЯ WEB ПРИЛОЖЕНИЯ..................................................................."
            | +-- РЕШАЕМАЯ ЗАДАЧА
            | |   +-- информирование ЦА о компании
            | |   +-- повышение узнаваемости бренда
            | |   +-- автоматизация бизнес-процессов
            | |   +-- формирование нового канала продаж
            | |   +-- получение прямой прибыли от веб-сервиса
            | |   +-- сбор статистических данных и обратная связь
            | +-- ЦЕЛИ ПОСЕТИТЕЛЯ
            | |   +-- сайт компании
            | |   +-- промо-сайт
            | |   +-- интернет-магазин
            | |   +-- социальная сеть
            | |   +-- веб-сервис
            | |   +-- информационный ресурс
            | +-- ДОСТУПНОСТЬ
            | |   +-- открытый (публичный ресурс)
            | |   +-- ограниченный доступ
            | |   +-- закрытый ресурс (интранет)
            | +-- МОНЕТИЗАЦИЯ
            | |   +-- прямая монетизация
            | |   +-- абонентская подписка
            | |   +-- разовая покупка
            | |   +-- рекламные позиции
            | |   +-- косвенная монетизация
            | |   +-- общественные проекты
            | |   +-- без монетизации
            | +-- ТЕМАТИКА РЕСУРСА
            |     +-- строительные сайты
            |     +-- авто/мото
            |     +-- банки
            |     +-- бизнес
            |     +-- дети
            |     +-- еtс
            
            | "ПРОТОТИПЫ ПРОЕКТА.........................................................................."
            | +-- WIREFRAME        "каркас приложения"
            | +-- PROTOTYPE        "минимум стилей"
            | +-- MOCKUP           "для демонстрации"

            | "ГРАФИЧЕСКОЕ ПРЕДСТАВЛЕНИЕ.................................................................."
            | +-- БЛОК СХЕМА                   "графическое представление 3-х алгоритмов"
            | |   +-- Терминатор               "Овал                     (начало и конец алгоритма)"
            | |   +-- Процес                   "Прямоугольник            (обработка данных)"
            | |   +-- Данные                   "Параллелепипед           (отображает данные)"
            | |   +-- Предопределенный процес  "Прямоугольник с линиями  (ссылка на код в другом месте)"
            | |   +-- Решение                  "Ромб                     (выбор) "
            | |   +-- Цикл                     "Восьмигранник            (цикл)"
            | |   +-- Соединитель              "Круг                     (разделение блок схемы на части)"
            | |   +-- Коментарий               "Скоба + штрихпунктир     (коментарий)"
            | |   +-- Паралельные действия     "паралельные линии        (паралельное выполнение)"
            | +-- UML
            |     +-- Структурные                  "элементы диаграммы"
            |     |   +-- классов
            |     |   +-- компонентов
            |     |   +-- композитной структуры
            |     |   +-- кооперации
            |     |   +-- развёртывания
            |     |   +-- объектов
            |     |   +-- пакетов
            |     |   +-- профилей
            |     +-- Поведения                     "элементы диаграммы"
            |     |   +-- деятельности
            |     |   +-- состояний
            |     |   +-- вариантов использования
            |     +-- Взаимодействия                "элементы диаграммы"
            |     |   +-- коммуникации
            |     |   +-- обзора взаимодействия 
            |     |   +-- последовательности
            |     |   +-- синхронизации
            |     +-- Зависимость
            |         +-- агрегация    "линия + ромб (часть - целое) часть отдельно сущ. от целого"
            |         +-- композиция   "линия + ромб закрашеный (часть - целое) часть не отдельно от целого"
            |         +-- зависимость  "пунктир + стрелка (независимое влияет на зависимое)"
            |         +-- обобщение    "линия + стрелка (отношение наследования или реализации интерфейса)"

        textarea
            | 
            | "ДАНО=========================================================================================="
            | +-- USER STORY                     "что нужно сделать (пожелание)"
            | |   +-- что / зачем / для кого
            | +-- USE CASE                       "сортировка пожелания по группам"
            |     +-- GUI / процессы / дополнительно
            | 
            | "МЕТОДОЛОГИЯ РАЗРАБОТКИ ПО....................................................................."
            | +-- ЖИЗНЕННЫЙ ЦИКЛ ПО
            | |   +-- СODE AND FIX                "разработка по до валидации заказчика"
            | |   +-- RUP                         "методология каскадная (Rational Unified Process)"
            | |   |   +-- v-образная              "паралельное тестирование"
            | |   |   |   +-- инкрементная модель "модульный выпуск"
            | |   |   |   +-- спиральная модель   "аналог каскадной в виде цикла (исключение риска)"
            | |   +-- XP                          "Extreme Programming (экстримальное программирование)"
            | |   |   +-- Короткий цикл обратной связи
            | |   |   |   +-- разработка через тестирование
            | |   |   |   +-- игра в планирование
            | |   |   |   +-- заказчик всегда рядом
            | |   |   |   +-- парное программирование
            | |   |   +--Непрерывный, а не пакетный процесс
            | |   |   |   +-- непрерывная интеграция
            | |   |   |   +-- рефакторинг
            | |   |   |   +-- частые небольшие релизы
            | |   |   +-- Понимание, разделяемое всеми
            | |   |   |   +-- простота
            | |   |   |   +-- метафора системы
            | |   |   |   +-- коллективное владение кодом
            | |   |   |   +-- стандарт кодирования
            | |   |   +-- Социальная защищённость программиста
            | |   |       +-- 40-часовая рабочая неделя
            | |   +-- AGILE                     "методология итераций"
            | |   |   +-- Scrum                 "проект на части и итерировать"
            | |   |   +-- Kanban                "точно в срок + доска со стикерами"
            | |   +-- ПРОТОТИПНАЯ
            | |       +-- иследовательский      "уточнение требований к ПО (для UI)"
            | |       +-- экспериментальный     "проверка технологии"
            | |       +-- эволюционный          "простая версия продукта"
            | +-- АРХИТЕКТУРА ПО
            | |   +-- MVC                       "модель-представление-контроллер"
            | |   +-- MVP                       "модель-представление-презентатор"
            | |   +-- MVVM                      "модель-представление-модель-представление"
            | |   +-- BEM-методологии           "блок, элемент, модификатор"
            | |   +-- SMACSS-методологии        "масштабируемая и модульная архитектура для CSS + namespace !!!"
            | |   |   +-- основа                "стили по умолчанию для базовых селекторов"
            | |   |   +-- структура             "структура вёрстки, размеры элементов, их выравнивание"
            | |   |   +-- модуль                "элементы, из которых строится модуль"
            | |   |   +-- тема                  "визуальное представление элементов стандартно"
            | |   |   +-- состояние             "состояния элементов после применения модификаторов"
            | |   +-- OOCSS-методологии         "объектно-ориентированный CSS"
            | |   +-- MCSS-методологии          "многослойный CSS"
            | |   +-- AMCSS-методологии         "модули атрибутов для CSS"
            | |   +-- FUN-методологии           "плоская иерархия селекторов, служебные стили, компоненты с неймспейсами"
            | +-- ООП
            | |   +-- Инкапсуляция
            | |   +-- Наследование
            | |   +-- Полиморфизм
            | |   +-- Абстракция
            | |   +-- Посылка сообщений
            | |   +-- Повторное использование
            | +-- АЛГОРИТМ
            | |   +-- Линейные                   "а.линейный"
            | |   +-- Выбора                     "а.выбора"
            | |   +-- Цикла                      "а.цикла"
            | +-- ПАТТЕРНЫ
            |     +-- GRASP                      "новые обобщенные"
            |     |   +-- Information expert     "информационный эксперт"
            |     |   +-- Creator                "создатель"
            |     |   +-- Controller             "контроллер"
            |     |   +-- Low coupling           "слабое зацепление"
            |     |   +-- High cohesion          "высокая степень связанности"
            |     |   +-- Polymorphism           "полиморфизм"
            |     |   +-- Pure fabrication       "чистая выдумка"
            |     |   +-- Indirection            "посредник"
            |     |   +-- Protected variations   "устойчивый к изменениям"
            |     +-- GOF
            |     |   +-- Создание объектов      "механизм инициализации, создавать объекты удобным способом."
            |     |   |   +-- Singleton
            |     |   |   +-- Factory Method
            |     |   |   +-- Prototype
            |     |   |   +-- Builder
            |     |   |   +-- Abstract Factory
            |     |   +-- Структурные            "отношения между классами и объектами (работать совместно)"
            |     |   |   +-- Adapter
            |     |   |   +-- Facade
            |     |   |   +-- Composite
            |     |   |   +-- Decorator
            |     |   |   +-- Proxy
            |     |   |   +-- Bridge
            |     |   |   +-- Flyweight
            |     |   +-- Поведенческие          "упростить взаимодействие между сущностями."
            |     |       +-- Strategy
            |     |       +-- Iterator
            |     |       +-- Observer
            |     |       +-- Memento
            |     |       +-- Command
            |     |       +-- Interpreter
            |     |       +-- Mediator
            |     |       +-- State
            |     |       +-- Template method
            |     |       +-- Visitor
            |     |       +-- Chain of responsibility
            |     +-- АКРОНИМ
            |         +-- KISS          "чем проще система тем надежнее"
            |         +-- DRY           "не повторяй себя"
            |         +-- SOLID
            |             +-- SRP       "принцип единственной обязанности (Single responsibility principle)"
            |             +-- OCP       "принцип открытости/закрытости (Open/closed principle)"
            |             +-- LSP       "принцип подстановки Барбары Лисков (Liskov substitution principle)"
            |             +-- ISP       "принцип разделения интерфейса (Interface segregation principle)"
            |             +-- DIP       "принцип инверсии зависимостей (Dependency inversion principle)"
            | 
            | "ТЕСТИРОВАНИЕ..............................................................................."
            | +-- UNIT TEST
            | +-- ТЕСТИРОВАНИЕ
            |     +-- функциональное тестирование            "проверке всего описанного функционала"
            |     +-- тестирования Верстки
            |     +-- usability тестирование                 "оценка удобства продукта в использовании"
            |     +-- тестирование безопасности
            |     +-- тестирование производительности сайта  "определение быстродействия сайта"
            | 
            |
            |РАЗМЕР ЭКРАНА
            |200-480
            |768-1024
            |1200-1800
        textarea
            | 
            | +-- ВАЛИДНОСТЬ
            | |   +-- стандарт W3C
            | |   +-- pixel perfect (попиксельная верстка)
            | |
            | +-- LANDING PAGE
            | +-- СЕМАНТИКА
            | +-- ВЕРСТКА
            | |   +-- табличная
            | |   +-- блочная
            | |   +-- Семантическая
            | |   +-- Адаптивная (резиновая) Flex, Responsive
            | |   +-- Кроссбраузерная
            | |
            | +-- ДИЗАЙН
            | |   +-- фиксироанный
            | |   +-- резиновый
            | |
            | +-- ИНФОГРАФИКА
            | +-- ТИПОГРАФИКА
            | |   +-- Open Sans     "шрифт"
            | |   +-- Font Awesome  "иконки"
            | |
            | +-- ЭФФЕКТЫ
            |     +-- Parallax Scrolling
            |     +-- Animation CSS3 
            |     +-- SVG графика
            |     +-- Спрайт

    section.tabContent
        h1 Дополнительно
        h4 Предоставление информации в HTML
            ul#block_id_1(style="display: none;")
                li Текст
                li Выпадающий список
                li Слайдер
                li Кнопка
                li Текстовое после
        button(onclick="showHide('block_id_1')").btn_show_hide show & hide 
        hr
        h4 Предоставление информации в CSS
            ul#block_id_2(style="display: none;")
                li STYLUS
                li переменные
                li вложенности
                li импорт
                li миксины
                li наследование
        button(onclick="showHide('block_id_2')").btn_show_hide show & hide 

        hr
        h4 Предоставление информации в Javascript
            ul#block_id_3(style="display: none;")
                li -
                li -
                li -
                li -
                li -
                li - 
        button(onclick="showHide('block_id_3')").btn_show_hide show & hide 
        hr
        h4 SMACSS
            ul#block_id_4(style="display: none;")
                li base
                li layout
                li modules
                li state
                li theme
        button(onclick="showHide('block_id_4')").btn_show_hide show & hide 
        hr
        h4 BEM
            ul#block_id_5(style="display: none;")
                li Блок
                li Элемент
                li Модификатор
                    ul
                        li булевый
                        li ключ-значение
                li Микс
                    ul
                        li совмещение однотипных сущ.
                        li повторное использование имеющихся сущ.
                li Файловая структура
                    ul
                        li имя-блока_имя-модификатора
                        li имя-блока_имя-модификатора_значение-модификатора
                        li имя-блока__имя-элемента
                        li имя-блока__имя-элемента_имя-модификатора
                        li имя-блока__имя-элемента_имя-модификатора_значение-модификатора
        button(onclick="showHide('block_id_5')").btn_show_hide show & hide 
        hr
        
        h4 USER STORY & USE CASE
            ul#block_id_6(style="display: none;")
                li USER STORY "что нужно сделать (пожелание)"
                    ul
                        li что
                        li зачем 
                        li для кого 
                li USE CASE "сортировка пожелания по группам"
                    ul
                        li GUI 
                        li процессы 
                        li дополнительно 
        button(onclick="showHide('block_id_6')").btn_show_hide show & hide 
        hr
        h4 ЖИЗНЕННЫЙ ЦИКЛ ПО
            ul#block_id_7(style="display: none;")
                li СODE AND FIX                "разработка по до валидации заказчика"
                li RUP                         "методология каскадная (Rational Unified Process)"
                    ul
                        li v-образная              "паралельное тестирование"
                            ul
                                li инкрементная модель "модульный выпуск"
                                li спиральная модель   "аналог каскадной в виде цикла (исключение риска)"
                        li XP                          "Extreme Programming (экстримальное программирование)"
                            ul
                                li Короткий цикл обратной связи
                                    ul 
                                        li разработка через тестирование
                                        li игра в планирование
                                        li заказчик всегда рядом
                                        li парное программирование
                                li Непрерывный, а не пакетный процесс
                                    ul
                                        li непрерывная интеграция
                                        li рефакторинг
                                        li частые небольшие релизы
                                li Понимание, разделяемое всеми
                                    ul
                                        li простота
                                        li метафора системы
                                        li коллективное владение кодом
                                        li стандарт кодирования
                                li Социальная защищённость программиста
                                    ul
                                        li 40-часовая рабочая неделя
                        li AGILE                     "методология итераций"
                            ul
                                li Scrum                 "проект на части и итерировать"
                                li Kanban                "точно в срок + доска со стикерами"
                        li ПРОТОТИПНАЯ
                            ul
                                li иследовательский      "уточнение требований к ПО (для UI)"
                                li экспериментальный     "проверка технологии"
                                li эволюционный          "простая версия продукта"
        button(onclick="showHide('block_id_7')").btn_show_hide show & hide 
        hr
        h4 АРХИТЕКТУРА ПО
            ul#block_id_8(style="display: none;")
                li MVC                       "модель-представление-контроллер"
                li MVP                       "модель-представление-презентатор"
                li MVVM                      "модель-представление-модель-представление"
                li BEM-методологии           "блок, элемент, модификатор"
                li SMACSS-методологии        "масштабируемая и модульная архитектура для CSS + namespace !!!"
                    ul
                        li основа                "стили по умолчанию для базовых селекторов"
                        li структура             "структура вёрстки, размеры элементов, их выравнивание"
                        li модуль                "элементы, из которых строится модуль"
                        li тема                  "визуальное представление элементов стандартно"
                        li состояние             "состояния элементов после применения модификаторов"
                li OOCSS-методологии         "объектно-ориентированный CSS"
                li MCSS-методологии          "многослойный CSS"
                li AMCSS-методологии         "модули атрибутов для CSS"
                li FUN-методологии           "плоская иерархия селекторов, служебные стили, компоненты с неймспейсами"
        button(onclick="showHide('block_id_8')").btn_show_hide show & hide 
        hr
        h4 ООП
            ul#block_id_9(style="display: none;")
                li Инкапсуляция
                li Наследование
                li Полиморфизм
                li Абстракция
                li Посылка сообщений
                li Повторное использование
        button(onclick="showHide('block_id_9')").btn_show_hide show & hide 
        hr
        h4 АЛГОРИТМ
            ul#block_id_10(style="display: none;")
                li Линейные                   "а.линейный"
                li Выбора                     "а.выбора"
                li Цикла                      "а.цикла"
        button(onclick="showHide('block_id_10')").btn_show_hide show & hide 
        hr
        h4 ПАТТЕРНЫ
            ul#block_id_11(style="display: none;")
                li GRASP "новые обобщенные"
                    ul
                        li Information expert     "информационный эксперт"
                        li Creator                "создатель"
                        li Controller             "контроллер"
                        li Low coupling           "слабое зацепление"
                        li High cohesion          "высокая степень связанности"
                        li Polymorphism           "полиморфизм"
                        li Pure fabrication       "чистая выдумка"
                        li Indirection            "посредник"
                        li Protected variations   "устойчивый к изменениям"
                li GOF
                    ul 
                        li Создание объектов      "механизм инициализации, создавать объекты удобным способом."
                            ul
                                li Singleton
                                li Factory Method
                                li Prototype
                                li Builder
                                li Abstract Factory
                        li Структурные            "отношения между классами и объектами (работать совместно)"
                            ul
                                li Adapter
                                li Facade
                                li Composite
                                li Decorator
                                li Proxy
                                li Bridge
                                li Flyweight
                        li Поведенческие          "упростить взаимодействие между сущностями."
                            ul
                                li Strategy
                                li Iterator
                                li Observer
                                li Memento
                                li Command
                                li Interpreter
                                li Mediator
                                li State
                                li Template method
                                li Visitor
                                li Chain of responsibility
                        li АКРОНИМ
                            ul
                                li KISS          "чем проще система тем надежнее"
                                li DRY           "не повторяй себя"
                                li SOLID
                                    ul
                                        li SRP       "принцип единственной обязанности (Single responsibility principle)"
                                        li OCP       "принцип открытости/закрытости (Open/closed principle)"
                                        li LSP       "принцип подстановки Барбары Лисков (Liskov substitution principle)"
                                        li ISP       "принцип разделения интерфейса (Interface segregation principle)"
                                        li DIP       "принцип инверсии зависимостей (Dependency inversion principle)"
        button(onclick="showHide('block_id_11')").btn_show_hide show & hide 
        hr
        h4 БЛОК СХЕМА
            ul#block_id_12(style="display: none;")
                table 
                    tr
                        td Терминатор 
                        td Овал
                        td (начало и конец алгоритма)
                    tr
                        td Процес
                        td Прямоугольник
                        td (обработка данных)
                    tr
                        td Данные
                        td Параллелепипед
                        td (отображает данные)
                    tr
                        td Предопределенный процес
                        td Прямоугольник с линиями
                        td (ссылка на код в другом месте)
                    tr
                        td Решение
                        td Ромб
                        td (выбор)
                    tr
                        td Цикл
                        td Восьмигранник
                        td (цикл)
                    tr
                        td Соединитель
                        td Круг
                        td (разделение блок схемы на части)
                    tr
                        td Коментарий
                        td Скоба + штрихпунктир
                        td (коментарий)
                    tr
                        td Паралельные действия
                        td паралельные линии
                        td (паралельное выполнение)
        button(onclick="showHide('block_id_12')").btn_show_hide show & hide 
        hr
        h4 UML
            ul#block_id_13(style="display: none;")
                li Структурные                  "элементы диаграммы"
                    ul
                        li классов
                        li компонентов
                        li композитной структуры
                        li кооперации
                        li развёртывания
                        li объектов
                        li пакетов
                        li профилей
                li Поведения                     "элементы диаграммы"
                    ul
                        li деятельности
                        li состояний
                        li вариантов использования
                li Взаимодействия                "элементы диаграммы"
                    ul 
                        li коммуникации
                        li обзора взаимодействия 
                        li последовательности
                        li синхронизации
                li Зависимость
                    ul
                        li агрегация    "линия + ромб (часть - целое) часть отдельно сущ. от целого"
                        li композиция   "линия + ромб закрашеный (часть - целое) часть не отдельно от целого"
                        li зависимость  "пунктир + стрелка (независимое влияет на зависимое)"
                        li обобщение    "линия + стрелка (отношение наследования или реализации интерфейса)"
        button(onclick="showHide('block_id_13')").btn_show_hide show & hide 
        hr
        h4 ПРОТОТИПЫ ПРОЕКТА
            ul#block_id_14(style="display: none;")
                li WIREFRAME        "каркас приложения"
                li PROTOTYPE        "минимум стилей"
                li MOCKUP           "для демонстрации"
        button(onclick="showHide('block_id_14')").btn_show_hide show & hide 

        br
        textarea ТЕСТИРОВАНИЕ
            |
            |+-- UNIT TEST
            |+-- ТЕСТИРОВАНИЕ
            |    +-- функциональное тестирование            "проверке всего описанного функционала"
            |    +-- тестирования Верстки
            |    +-- usability тестирование                 "оценка удобства продукта в использовании"
            |    +-- тестирование безопасности
            |    +-- тестирование производительности сайта  "определение быстродействия сайта"
    section.tabContent 
        div.tabs
            input(type="radio" name="tabs" checked)#tab-first 
            label(for="tab-first")
                p HTML
            input(type="radio" name="tabs")#tab-second
            label(for="tab-second")
                p PUG
            input(type="radio" name="tabs")#tab-last
            label(for="tab-last")
                p Markdown
            div#tab-content-1.tab-content
                h1 HTML
                div.tabContent_html
                    p !DOCTYPE html
                    p html lang="en"
                    p --- head
                    p --- meta charset="utf-8"
                    p --- title Name_Site
                    p --- meta(name="viewport" content="width=device-width, initial-scale=1"
                    p --- meta(name="keywords" content="ключевое слово 1, ключевое слово 2"
                    p --- meta(name="description" content="Описание контента.")
                    p --- link(rel="icon" type="image/png" href="images/favicon-16x16.png")
                    p --- link(rel="stylesheet" href="fonts/font-awesome/css/font-awesome.css")
                    p --- link(href="css/main.css" type="text/css" rel="stylesheet")
                    p --- script(type="text/javascript" src="js/main.js")
                    p --- body
                    hr
                    table.tabContent_html_table
                        tr
                            td.b header
                            td.i заглавие шапка
                        tr
                            td.b nav
                            td.i навигация
                        tr
                            td.b section
                            td.i секция
                        tr
                            td.b article
                            td.i новости статьи
                        tr
                            td.b main
                            td.i главный блок
                        tr
                            td.b aside
                            td.i сайдбар боковая панель
                        tr
                            td.b footer
                            td.i подвал
                        tr
                            td.b figure
                            td.i групировка изображения и подписи к ним
                        tr
                            td.b hgroup
                            td.i группирования заголовков веб-страницы
                        tr
                            td.b span.name text
                            td.i с отдельным текстом "span"
                        tr
                            td.b abbr(title="пояснение") АБР
                            td.i 
                                abbr(
                                    title="пояснение"
                                ) АБР
                        tr
                            td.b address text
                            td.i 
                                address text
                        tr
                            td.b cite text
                            td.i 
                                cite text
                        tr
                            td.b blockquote text
                            td.i 
                                blockquote text
                        tr
                            td.b ins text
                            td.i
                                ins text
                        tr
                            td.b p text
                            td.i 
                                p text
                        tr
                            td.b b text
                            td.i 
                                b text
                        tr
                            td.b strong text
                            td.i 
                                strong text
                        tr
                            td.b i text
                            td.i 
                                i text
                        tr
                            td.b u text
                            td.i 
                                u text
                        tr
                            td.b s text
                            td.i
                                s text
                        tr
                            td.b em text
                            td.i 
                                em text
                        tr
                            td.b small text
                            td.i 
                                small text
                        tr
                            td.b big text
                            td.i 
                                big text
                        tr
                            td.b mark text
                            td.i 
                                mark text
                        tr
                            td.b dialog open
                            td.i диалоговое окно
                        tr
                            td.b p.anchorName1
                            td.i якорь
                        tr
                            td.b section.page1
                            td.i секция
                        tr
                            td.b div#name
                            td.i блок для одиночных классов
                        tr
                            td.b div.name
                            td.i блок для нескольких классов
                        tr
                            td.b a (href="www.site.com) link
                            td.i 
                                a(
                                    href="www.site.com"
                                ) link
                        tr
                            td.b a (href="image/xxx.jpg" download)>Скачать файл
                            td.i 
                                a(
                                    href="image/xxx.jpg"
                                    download
                                ) Скачать файл
                        tr
                            td.b a (href="image/xxx.jpg") Открыть файл в браузере
                            td.i 
                                a(
                                    href="image/xxx.jpg"
                                ) Открыть файл в браузере
                        tr
                            td.b br
                            td.i перевод строки
                        tr
                            td.b hr
                            td.i 
                                hr
                        tr
                            td.b h1 text
                            td.i 
                                h1 text
                        tr
                            td.b h2 text
                            td.i 
                                h2 text
                        tr
                            td.b h3 text
                            td.i 
                                h3 text
                        tr
                            td.b h4 text
                            td.i 
                                h4 text
                        tr
                            td.b h5 text
                            td.i 
                                h5 text
                        tr
                            td.b h6 text
                            td.i 
                                h6 text
                        tr
                            td.b textarea (name="comment" cols="40" rows="3")
                            td.i 
                                textarea(
                                   name="comment"
                                   cols="40"
                                   rows="3"
                               )
                        tr
                            td.b input (type="text" size="40")
                            td.i 
                                input(
                                    type="text"
                                    size="40"
                                )
                        tr
                            td.b input (type="radio" name="text" value="ie")
                            td.i 
                                input(
                                    type="radio"
                                    name="text"
                                    value="ie"
                                )
                        tr
                            td.b input (type="submit" value="Отправить")
                            td.i 
                                input(
                                    type="submit"
                                    value="Отправить"
                                )
                        tr
                            td.b input (type="reset" value="Очистить")
                            td.i 
                                input(
                                type="reset"
                                value="Очистить"
                                )
                        tr
                            td.b input (type="range" id="rtl" min="0" max="100" value="0" oninput="ch_rad()")
                            td.i 
                                input(
                                    type="range"
                                    id="rtl"
                                    min="0"
                                    max="100"
                                    value="0"
                                    oninput="ch_rad()"
                                )
                        tr
                            td.b input (type="text" id="ttl" value="0")
                            td.i 
                                input(
                                    type="text"
                                    id="ttl"
                                    value="0"
                                )
                        tr
                            td.b 
                                textarea(name="comment" cols="60" rows="3")
                                    |
                                    |table(border="1" width="300" bgcolor="#a9a9a9") 
                                    |   tr
                                    |       td 1
                                    |       td 2
                                    |       td 3
                            td.i 
                                table(
                                    border="1"
                                    width="300"
                                    bgcolor="#a9a9a9"
                                )
                                    tr
                                        td 1
                                        td 2
                                        td 3
                        tr
                            td.b 
                                textarea(name="comment" cols="60" rows="3")
                                    |
                                    |form(action="/php/_page_test.php" method="get")
                                    |   select(id="region"  name="region")
                                    |       optionSelect Region
                                    |       option(value="Africa") Africa
                                    |       option(value="Americas") Americas
                                    |       option(value="Antarctica") Antarctica
                                    |       option(value="Asia") Asia
                            td.i 
                                form(action="/php/_page_test.php" method="get")
                                    select(id="region"  name="region")
                                        optionSelect Region
                                        option(value="Africa") Africa
                                        option(value="Americas") Americas
                                        option(value="Antarctica") Antarctica
                                        option(value="Asia") Asia
                        tr
                            td.b 
                                textarea(name="comment" cols="60" rows="3")
                                    |dl
                                    |   dt Термин 1
                                    |       dd Описание термина 1
                                    |   dt Термин 2
                                    |       dd Описание термина 2

                            td.i  
                                dl
                                    dt Термин 1
                                        dd Описание термина 1
                                    dt Термин 2
                                        dd Описание термина 2
                        tr
                            td.b details openТекст
                            td.i 
                                details openТекст
                        tr
                            td.b
                                textarea(name="comment" cols="60" rows="3")
                                    |
                                    |img(
                                    |    src="http://place-hold.it/200x100"
                                    |    alt=""
                                    |)
                            td.i 
                                img(
                                    src="http://place-hold.it/200x100"
                                    alt=""
                                )


            div#tab-content-2.tab-content
                h1 PUG
                div.tabContent_html
                    table.tabContent_html_table
                        tr
                            td.b 
                                textarea   
                                    | <!DOCTYPE html>
                                    | html(lang="en")
                                    |     head
                                    |         meta(charset="UTF-8")
                                    |         meta(name="viewport", content="width=device-width, initial-scale=1.0")
                                    |         meta(http-equiv="X-UA-Compatible", content="ie=edge")
                                    |         title Document
                                    | 
                                    |         <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/uikit/3.0.0-beta.33/css/uikit.min.css" />
                                    |         <script src="https://cdnjs.cloudflare.com/ajax/libs/uikit/3.0.0-beta.33/js/uikit.min.js"></script>
                                    |         <script src="https://cdnjs.cloudflare.com/ajax/libs/uikit/3.0.0-beta.33/js/uikit-icons.min.js"></script>
                                    |
                                    |     body 
                                    |     h1 Name site
                                    |     hr
                                    |     h3 Next name site
                                    |     hr
                                    |     p This text it is simple text jn test this page.
                                    |     u text
                                    |     p text 
                                    |         i text 
                                    |         | text
                                    |     textarea 123 br
                                    |
                                    |     button button
                                    |
                                    |     -var q=10;
                                    |     -var w=20;
                                    |
                                    |     p #{q+w}
                                    |
                                    |     a(href="http://vk.com")
                                    |
                                    |     hr
                                    |     img(src="https://img4.goodfon.ru/wallpaper/big/c/7f/iaguar-dikaia-koshka-khishchnik.jpg", alt="cat")
                                    |     - for(var i=0; i<5; i++)
                                    |         li menu #{i}
                                    |     hr
                                    |     - var list = ["Uno", "Dos", "Tres", "Cuatro", "Cinco", "Seis"]
                                    |     each item in list
                                    |         li= item
                                    |     hr
                                    | <div class="uk-panel">
                                    |     <img class="uk-align-left uk-margin-remove-adjacent" src="http://eurocrown.com.ua/wp-content/uploads/2016/06/160620_4_Eu.jpg" width="225" height"150" alt="Example image">
                                    |     <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                                    |     <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.

                            td.i 
                                h1 Name site
                                hr
                                h3 Next name site
                                hr
                                p This text it is simple text jn test this page.
                                u text
                                p text 
                                i text 
                                    | text
                                textarea 123
                                br
                                button button
                                -var q=10;
                                -var w=20;
                                p #{q+w}
                                a(href="http://vk.com")
                                hr
                                img(src="https://img4.goodfon.ru/wallpaper/big/c/7f/iaguar-dikaia-koshka-khishchnik.jpg", alt="cat")
                                - for(var i=0; i<5; i++)
                                li menu #{i}
                                hr
                                - var list = ["Uno", "Dos", "Tres", "Cuatro", "Cinco", "Seis"]
                                each item in list
                                    li= item
                                hr

                                <div class="uk-panel">
                                    <img class="uk-align-left uk-margin-remove-adjacent" src="http://eurocrown.com.ua/wp-content/uploads/2016/06/160620_4_Eu.jpg" width="225" height"150" alt="Example image">
                                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                                    <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
            div#tab-content-3.tab-content
                h1 Markdown.md
                br
                textarea
                    | # h1
                    | #### h4
                textarea
                    | ---
                textarea
                    | - text 1
                    | - text 2
                    |   - text
                    |   - text
                textarea
                    | 1.  Bird
                    | 2.  McHale
                textarea
                    | Same links [name link](http://googl.com "hover_link").
                    | _italic_
                    | __bold__
                    | ~~text~~
                    | ``Text``
                textarea
                    | <http://example.com/>
                    | > This is a blockquote.
                    | > 
                    | > This is the second paragraph in the blockquote.
                    | > 123
                textarea
                    | ![name pic](https://ru.vuejs.org/images/logo.png/100/200)
                textarea
                    | ```CSS
                    |  one code line 1
                    |  one code line 2
                    | ```
                textarea
                    | ||||
                    | | ------ | ------ | ------ |
                    | | [__Pug__](https://pugjs.org/api/getting-started.html "Pug")  | _``(HTML + JavaScript)``_ | _верстка_ |
                    | | [__UiKit__](https://getuikit.com/ "UiKit") | _``(HTML + JavaScript + CSS)``_  | _верстка + стили_ |
                    | | [__Stylus__](http://stylus-lang.com/ "Stylus") & [__SMACSS__](https://smacss.com/ "SMACSS") + [__BEM__](http://getbem.com/ "BEM") | _``(CSS)``_ | _стили & методология_ |
                    | | [__Vue__](https://ru.vuejs.org/ "Vue") | _``(JavaScript)``_ | _интерактивность_ |
                    | |||


    section.tabContent 
        div.tabs
            input(type="radio" name="tabs" checked)#tab-last_1
            label(for="tab-last_1")
                p CSS
            input(type="radio" name="tabs")#tab-last_2
            label(for="tab-last_2")
                p Stylus
            div#tab-content-4.tab-content
                h1 CSS
                table.tabContent_css_table
                    tr
                       td.b #name1, #name2, #name3 { code }
                        td.i id
                    tr
                        td.b .name1, .name2, .name3 { code }
                        td.i class
                    tr
                        td.b #button1:hover, #button2:hover {  }
                        td.i при наведении курсора
                    tr
                        td.b #button1:active, #button2:active {  }
                        td.i при нажатии курсора
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b @color-red #f44336
                        td.i 
                            div.color.color-red
                    tr
                        td.b @color-pink #ff007e
                        td.i 
                            div.color.color-pink
                    tr
                        td.b @color-purple #812991
                        td.i 
                            div.color.color-purple
                    tr
                        td.b @color-turquoise #00AFFF
                        td.i 
                            div.color.color-turquoise
                    tr
                        td.b @color-turquoise_1 #30D5C8
                        td.i 
                            div.color.color-turquoise_1
                    tr
                        td.b @color-grey-light #edeef0
                        td.i 
                            div.color.color-grey-light
                    tr
                        td.b @color-green #48A65B
                        td.i 
                            div.color.color-green
                    tr
                        td.b @bg-light #3a3a3a
                        td.i 
                            div.color.color-bg-light
                    tr
                        td.b @bg-dark #2b2b2b
                        td.i 
                            div.color.color-bg-dark
                    tr
                        td.b @border-color #222222
                        td.i 
                            div.color.color-border-color
                        tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b 
                            dl
                                dt @font-face
                                    dd font-family 'OpenSans-Regular'
                                    dd src url('../fonts/Open_Sans/OpenSans-Regular.ttf')
                        td.i @font-face
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b height 0px
                        td.i высота в пикселях
                    tr
                        td.b height 0vh
                        td.i высота по области просмотра
                    tr
                        td.b height 0%
                        td.i высота в процентах
                    tr
                        td.b width 0px
                        td.i ширина в пикселях
                    tr
                        td.b width 0vw
                        td.i ширина по облости просмотра
                    tr
                        td.b width 0%
                        td.i ширина в процентах
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b resize none
                        td.i отмена изменения размера textarea
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b position absolute
                        td.i абсолютное позиционирование
                    tr
                        td.b position relative
                        td.i относительное позиционирование
                    tr
                        td.b position fixed
                        td.i фиксированное положение элемента при прокрутке стр
                    tr
                        td.b position static
                        td.i наследует своиства род
                    tr
                        td.b position inherit
                        td.i 
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b top calc(0% - 0px)
                        td.i выравнивание по высоте (200-половина блока)
                    tr
                        td.b top 0px
                        td.i расположение элемента от верха в пикселях
                    tr
                        td.b top 0%
                        td.i расположение элемента от верха в процентах
                    tr
                        td.b left calc(50% - 0px)
                        td.i выравнивание по ширине (200-половина блока)
                    tr
                        td.b left 0px
                        td.i расположение элемента слева в пикселях
                    tr
                        td.b left 0%
                        td.i расположение элемента слева в процентах
                    tr
                        td.b bottom 0px
                        td.i растояние снизу в пикселях
                    tr
                        td.b bottom 0%
                        td.i растояние снизу в процентах
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b z-index 0
                        td.i отметка элемента по высоте плана
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b float right
                        td.i обтекание по правому краю
                    tr
                        td.b float left
                        td.i обтекание по левому краю
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b clear both
                        td.i отмена обтекание блока по указаному краю
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b margin 0 auto
                        td.i выровнять по центру горизонтально
                    tr
                        td.b margin 0px
                        td.i отступ вокруг элемента в пикселях
                    tr
                        td.b margin 20%
                        td.i отступы вокруг элемента в процентах
                    tr
                        td.b margin-left 0px
                        td.i отступ слева
                    tr
                        td.b margin-right 0px
                        td.i отступ справа
                    tr
                        td.b margin-top 0px
                        td.i отступ сверху
                    tr
                        td.b margin-bottom 0px
                        td.i отступ снизу
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b padding 0px
                        td.i поля вокруг текста
                    tr
                        td.b padding-left 0px
                        td.i поле слева
                    tr
                        td.b padding-right 0px
                        td.i поле справа
                    tr
                        td.b padding  30px 15px
                        td.i верх-низ и право-лево
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b display table
                        td.i для выравнивания по центру
                    tr
                        td.b display none
                        td.i прячем от показа
                    tr
                        td.b display block
                        td.i показать блок
                    tr
                        td.b display inline
                        td.i выровнять вдоль гориз. линии
                    tr
                        td.b 
                        hr
                        td.i 
                            hr
                    tr
                        td.b background-color #282828
                        td.i цвет фона
                    tr
                        td.b background rgba(0, 0, 0, 0.5)
                        td.i фон полупрозрачный
                    tr
                        td.b background none
                        td.i без фона
                    tr
                        td.b background url(../images/2.jpg) no-repeat fixed
                        td.i repeat-x фиксир
                    tr
                        td.b background-size cover
                        td.i фон занимает всю доступную площадь
                    tr
                        td.b background -webkit-linear-gradient(rgba(255,255,255,0.3), rgba(255,255,255,0))
                        td.i 
                    tr
                        td.b background -o-linear-gradient(rgba(255,255,255,0.3), rgba(255,255,255,0))
                        td.i 
                    tr
                        td.b background linear-gradient(rgba(255,255,255,0.3), rgba(255,255,255,0))
                        td.i 
                    tr
                        td.b background-position 50% 50%
                        td.i 
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b border 1px solid #C0C0C0
                        td.i рамка, толщина, линия, цвет
                    tr
                        td.b border 1px solid red
                        td.i рамка, толщина, линия, цвет
                    tr
                        td.b border 1px solid transparent
                        td.i с прозрачной рамкой
                    tr
                        td.b border-top 0px solid white
                        td.i рамка сверху белая
                    tr
                        td.b border-bottom 0px solid white
                        td.i рамка снизу белая
                    tr
                        td.b border-left 0px solid white
                        td.i рамка слева белая
                    tr
                        td.b border-right 0px solid white
                        td.i рамка справа белая
                    tr
                        td.b border none
                        td.i без рамки
                    tr
                        td.b border-radius 0px
                        td.i скругления углов рамки, радиус рамки
                    tr
                        td.b border none
                        td.i Линия не отображается и значение ее толщины обнуляется
                    tr
                        td.b border dotted
                        td.i линия состоящая из набора точек
                    tr
                        td.b border dashed
                        td.i пунктирная линия, состоящая из серии коротких отрезков
                    tr
                        td.b border solid
                        td.i сплошная линия
                    tr
                        td.b border double
                        td.i двойная линия
                    tr
                        td.b border groove
                        td.i создает эффект вдавленной линии
                    tr
                        td.b border ridge
                        td.i создает эффект рельефной линии
                    tr
                        td.b border inset
                        td.i псевдотрехмерная линия
                    tr
                        td.b border outset
                        td.i псевдотрехмерная линия
                    tr
                        td.b border inherit
                        td.i наследует значение родителя
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b outline: none;
                        td.i для textarea
                    tr
                        td.b 
                            dl
                                dt -webkit-clip-path: polygon(0 20px,
                                    dd  20px 0, 
                                    dd 100px 0,
                                    dd 120px 20px,
                                    dd 600px 20px,
                                    dd 600px 300px,
                                    dd 0 300px);

                        td.i 
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b box-shadow: none;
                        td.i убрать тень
                    tr
                        td.b box-shadow: 0 0 30px rgba(0,0,0,0.8);
                        td.i тень блока
                    tr
                        td.b box-shadow: 0 0 60px rgba(0, 0, 0, .8) inset;
                        td.i внутренняя тень блока
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b text-shadow: 1px 1px 1px rgba(0, 0, 0, .3);
                        td.i тень текста
                    tr
                        td.b text-shadow: -1px -1px #000,   0 1px 0 #444;
                        td.i 
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b opacity: 0.5;
                        td.i Полупрозрачность элемента от 0 до 1
                    tr
                        td.b color: #00BFFF;
                        td.i цвет текста
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b font-family: 'OpenSans-Light', sans-serif;
                        td.i шрифт
                    tr
                    td.b font-family:  'SourcexmpPro-Regular';
                        td.i шрифт
                    tr
                        td.b font-size: 0%;
                        td.i размер шрифта в процентах
                    tr
                        td.b font-size: 11pt;
                        td.i размер шрифта в пунктах
                    tr
                        td.b font-size: 16px;
                        td.i размер шрифта в пикселях
                    tr
                        td.b font-style: italic;
                        td.i стиль текста (курсив)
                    tr
                        td.b font-style: bold;
                        td.i стиль текста (жирный)
                    tr
                        td.b font-weight: 600;
                        td.i 
                    tr
                        td.b font-weight: bold;
                        td.i 
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b text-align: center;
                        td.i выравнивание текста по центру
                    tr
                        td.b text-align: left;
                        td.i выравнивание текста слева
                    tr
                        td.b text-align: right;
                        td.i выравнивание текста справа
                    tr
                        td.b text-decoration: none;
                        td.i убирать подчёркивание у ссылок
                    tr
                        td.b text-decoration: underline;
                        td.i подчеркивание текста
                    tr
                        td.b text-decoration-color: blue;
                        td.i цвет подчеркивания синим цветом
                    tr
                        td.b text-decoration-style: dashed;
                        td.i тип линии подчеркивания
                    tr
                        td.b text-transform: uppercase;
                        td.i текст большими буквами
                    tr
                        td.b text-indent: 20px;
                        td.i Отступ первой строки в пикселах
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b column-count: 3;
                        td.i текст в три колонки
                    tr
                        td.b column-rule: 1px dashed grey;
                        td.i вертикальные линии между колонками
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b line-height: 0px;
                        td.i межстрочный интервал по центру = выс блока
                    tr
                        td.b letter-spacing: 9px;
                        td.i межбуквенный интервал
                    tr
                        td.b user-select: none;
                        td.i убирать выделение текста
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b list-style-type: circle;
                        td.i круг
                    tr
                        td.b list-style-type: disc;
                        td.i точка
                    tr
                        td.b list-style-type: square;
                        td.i квадрат
                    tr
                        td.b list-style-type: decimal;
                        td.i арабскими числами
                    tr
                        td.b list-style-type: upper-alpha;
                        td.i заглавные латинские
                    tr
                        td.b list-style-type: upper-roman;
                        td.i римскими числами
                    tr
                        td.b list-style-type: none;
                        td.i отмена маркера
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b cursor: pointer;
                        td.i курсор указатель
                    tr
                        td.b cursor: move;
                        td.i курсор перемещение
                    tr
                        td.b cursor: col-resize;
                        td.i курсор горизонтальное смещение размера границы
                    tr
                        td.b cursor: row-resize;
                        td.i курсор вертикальное смещение размера границы
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b overflow: hidden;
                        td.i сокрытие полосы прокрутки
                    tr
                        td.b overflow-x: hidden;
                        td.i cокрытие горизонтальной полосы
                    tr
                        td.b overflow-y: hidden;
                        td.i cокрытие вертикальной полосы
                    tr
                        td.b overflow: scroll;
                        td.i добавляем полосы прокрутки
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b perspective: 800px;
                        td.i установка перспективы
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b transform-style: preserve-3d;
                        td.i 
                    tr
                        td.b transform: rotate3D(1, 1, 1, 0deg);
                        td.i 
                    tr
                        td.b transform: rotateX(0deg);
                        td.i вращение относительно коор. Х
                    tr
                        td.b transform: rotateY(0deg);
                        td.i вращение относительно коор. Y
                    tr
                        td.b transform: rotateZ(0deg);
                        td.i вращение относительно коор. Z
                    tr
                        td.b transform: translateX(0px);
                        td.i перемещение по оси Х
                    tr
                        td.b transform: translateY(0px);
                        td.i перемещение по оси Y
                    tr
                        td.b transform: translateZ(0px);
                        td.i перемещение по оси Z
                    tr
                        td.b transform: scale3d(4, 4, 1);
                        td.i масштабирование
                    tr
                        td.b transform: scale(1.2, 1.2);
                        td.i 
                    tr
                        td.b transform: rotateX(70deg) scale3d(4, 4, 1) translateZ(-750px) translateY(-500px) translateX(-50px);
                        td.i 
                    tr
                        td.b transform-origin: x y z;
                        td.i 
                    tr
                        td.b transform-origin: 100px 100px 100px;
                        td.i 
                    tr
                        td.b transform-origin: 100% 100% 100%;
                        td.i 
                    tr
                        td.b transform-origin: 100% 0 -50px;
                        td.i 
                    tr
                        td.b transition: 1.5s linear;
                        td.i нормально нормально нормально
                    tr
                        td.b transition: 1.5s ease-in-out;
                        td.i медленно нормально медленно
                    tr
                        td.b transition: 1.5s ease;
                        td.i медленно быстро медленно
                    tr
                        td.b transition: all 1s;
                        td.i 
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b 
                            dl
                                dt .anim {
                                    dd animation-timing-function: linear;
                                    dd animation-iteration-count: infinite; 
                                    dd animation-duration: 5s; 
                                    dd animation-name: anim; 
                                    dd }
                        td.i 
                            ul 
                                li ровная анимация
                                li количество повторов анимации
                                li время цикла анимации
                                li наименование анимации
                    tr
                        td.b 
                            dl
                                dt @-webkit-keyframes anim {
                                    dd 0% {-webkit-transform: rotateZ(0deg);}
                                    dd 100% {-webkit-transform: rotateZ(-360deg);}
                                    dd }
                        td.i 
                            ul 
                                li анимировать с ...
                                li анимировать по ...
                    tr
                        td.b 
                            hr
                        td.i 
                            hr
                    tr
                        td.b flex: 0 0 auto;
                        td.i выравнивание по центру

            div#tab-content-5.tab-content
                h1 Stylus
                table.tabContent_css_table
                    tr
                       td.b 
                        td.i 
                textarea 
                   | 
                   | +-- Stylus
                   | |   +-- переменные
                   | |   +-- вложенности
                   | |   +-- импорт
                   | |   +-- миксины
                   | |   +-- наследование
                   | |   +-- математич. операт.
                   | |
                   | +-- SMACSS
                   | |   +-- base
                   | |   +-- layout
                   | |   +-- modules
                   | |   +-- state
                   | |   +-- theme
                   | |
                   | +-- BEM
                   |     +-- Блок
                   |     +-- Элемент
                   |     +-- Модификатор
                   |     |   +-- булевый
                   |     |   +-- ключ-значение
                   |     +-- Микс
                   |         +-- совмещение однотипных сущ.
                   |         +-- повторное использование имеющихся сущ.
                   |         +-- Файловая структура
                   |             +-- имя-блока_имя-модификатора
                   |             +-- имя-блока_имя-модификатора_значение-модификатора
                   |             +-- имя-блока__имя-элемента
                   |             +-- имя-блока__имя-элемента_имя-модификатора
                   |             +-- имя-блока__имя-элемента_имя-модификатора_значение-модификатора

        
    section.tabContent 
        h1 JavaScript 
            small //всё в джаваскрипт являеться как объекты
        br
        table.tabContent_js_table
                tr
                    td.b 
                        dl
                            dt ПРОСТОЙ ТИП
                                dd Число
                                dd Строка
                                dd Логический
                                dd Ничего
                                dd Неопределено
                    td.i 
                        ul
                            li integer
                            li string
                            li boolean
                            li null
                            li undefined
                tr
                    td.b 
                        dl
                            dt ОБЪЕКТЫ
                                dd Объект
                                dd Массив
                                dd Регулярное выражение
                                dd Функция
                                    dl
                                        dt
                                            dd стандартная
                                            dd анонимная
                                            dd самовызывающаяся
                                            dd конструктор
                                                dl
                                                    dt
                                                        dd обвёртки
                                                        dd Number("555");
                                                        dd String(555);
                                                        dd Boolean(1);
                    td.i 
                        ul 
                            li var car = {model: "Dodg", speed: 250, color: 'green'};
                            li var arr = [1, 2, 3];
                            li var regexp = /w+/g;
                            li --/--
                            li function nameFun(){};
                            li var i = function(){};
                            li ;(function(){}());
                            li для создания новых обьектов
                            li var N = new Number(4000);  //из числа делаем объект
                            li конструктор для перевода в числа
                            li конструктор для перевода в строку
                            li конструктор для перевода в буленовский тип данных
                tr
                    td.b 
                        dl
                            dt МЕТОД (оператор)
                                dd арифметический
                                    dl
                                        dt 
                                            dd унарный
                                                dl 
                                                    dt
                                                        dd инкремент и декремент
                                                            dl
                                                                dt
                                                                    dd префексный и постфиксный
                                            dd бинарный 
                                            dd присваивание с операцией
                                            dd отношения
                                dd логический 
                                    dl
                                        dt
                                            dd && 
                                                dl
                                                    dt 
                                                        dd true && true
                                                        dd false && false
                                            dd ||
                                                dl 
                                                    dt
                                                        dd true || false
                                                        dd false || true
                                                        dd example
                                            dd !
                                                dl 
                                                    dt 
                                                        dd !true
                                                        dd !false
                                dd Тернарный ? :
                                dd Ветвления if else
                                dd Перечисления switch case

                    td.i 
                        ul 
                            li 
                            li + - / * %
                            li -1
                            li 
                            li i++ & i--; ++i & i--;
                            li 1 + 1;
                            li i += 1;
                            li < > <= >= ===
                            li
                            li first===true & second===true ? =true : =false;
                            li true
                            li false
                            li first===true ? =first : =second
                            li =true
                            li =true
                            li var example = ifTrue || "string";
                            li true->false & false->true
                            li false
                            li true
                            li var text = 5>10 ? "x больше" : "x меньше";
                            li if(){}else{};
                            li switch(выражение){case выражение: инструкция case выражение: инструкция default: инструкция};
                            
                tr
                    td.b 
                        dl
                            dt ЦИКЛ
                                dd for
                    td.i 
                        ul 
                            li for(var i=0; i<10; i++){console.log(i);};
                tr
                    td.b 
                        dl
                            dt ПРИМЕР
                                dd var name_var = document.querySelector('#name_node');
                                    dl 
                                        dt name_var.onclick = function(){
                                            dd name_var.innerHTML = "<b>qwert</b>";
                                            dd name_var.style.color = "green";
                                            dd name_var.style.display='none';
                                            dd name_var.classList.toggle("add_class");
                                            dd };
                    td.i
                        ul
                            li 
                            li 
                            li выбрать элемент DOM и присвоить text
                            li на элемент навешиваем обработчик и функцмю
                            li вставить текст (c тегами html) в элемент
                            li изменить цвет текста
                            li name_var присвоить "скрыть"
                            li присвоение класса с определенными своиствами
                            li 
                tr
                    td.b 
                        dl
                            dt ФУНКЦИЯ
                                dd function test(name) {
                                    dl 
                                        dt 
                                            dd return "Hello " + name;
                                            dd };
                                dd console.log(test("Aleksej"));

                    td.i
                        ul
                            li 
                            li создание функции с параметром name
                            li 
                            li 
                            li 
                tr
                    td.b 
                        dl
                            dt стрелочная функция
                                dd var fun = (x, y) => x + y;
                                dd console.log(fun(25));

                    td.i
                        ul
                            li 
                            li 
                            li 50
                tr
                    td.b 
                        dl
                            dt оператор выбора
                                dd var name_var_chbox = document.querySelector('input');
                                dd if (name_var_chbox.checked) {
                                    dl
                                        dt 
                                            dd name_var.style.display='none';
                                dd }
                                dd else {
                                    dl 
                                        dt 
                                            dd name_var.style.display='block';
                                dd };

                    td.i
                        ul
                            li 
                            li 
                            li 
                            li если чекс бокс выбран;
                            li то name_var присвоить "скрыть";
                            li 
                            li иначе;
                            li name_var присвоить "показать";
                            li 
                tr
                    td.b 
                        dl
                            dt ПРОСТЫЕ ТИПЫ
                                dd var num   = 10;
                                dd var str   = "string";
                                dd var bool  = true;
                                dd var nan   = null;
                                dd var undef = undefined;
                                dd var NaN
                                dd var Infinity
                    td.i
                        ul
                            li 
                            li число
                            li строка
                            li логический
                            li ничего
                            li неопределено
                            li глобальные переменные
                            li глобальные переменные
                tr
                    td.b 
                        dl
                            dt ОБЪЕКТ
                                dd var car = {
                                    dl
                                        dt 
                                            dd model: "Dodg",
                                            dd speed: 250,
                                            dd color: 'green'
                                dd };
                    td.i
                        ul
                            li 
                            li console.log(car.model);
                            li 
                            li 
                            li 
                            li 
                tr
                    td.b 
                        dl
                            dt НАСЛЕДОВАНИЕ ОБЬЕКТА
                                dd var protoMan = {name: "pronoMan", color: "red"};
                                dd var man = {name: "Man"};
                                    dl
                                        dt 
                                            dd man.__proto__ = protoMan;
                                dd console.log(man.color);
                    td.i
                        ul
                            li 
                            li 
                            li 
                            li 
                            li 
                tr
                    td.b 
                        dl
                            dt МЕТОДЫ
                                dd typeof
                                dd parseInt()
                                dd parseFloat()
                                dd toString()
                                dd toFixed()
                                dd length
                                dd charAt()
                                dd str[]
                                dd substring()
                                dd substr()
                                dd indexOf()
                                dd lastIndexOf()
                                dd replace()
                                dd slice()
                                dd split()
                                dd toUpperCase()
                                dd toLowerCase()
                                dd Math.sqrt()
                                dd Math.pow()
                                dd Math.PI
                                dd Math.E
                                dd toPrecision()
                                dd console.log()
                                dd document.write()
                                dd window.open()

                    td.i
                        ul
                            li 
                            li показать что за тип   (typeof 10;)
                            li преобразование строки в число, второй параметр система счисления 10-я   (parseInt("45",10);)
                            li тоже самое для флоат   (parseFloat("45.5");)
                            li преобразование в строку   (55 .toString();)
                            li количество знаков после запятой
                            li длина строки   (str.length )
                            li символ с порядковым номером 0   (str.charAt(0))
                            li строка как массив = символ под номером 5   (str[5])
                            li подстрока с 5 по 10 символ   (str.substring(5,10))
                            li выделяет с пятого символа и на 3 сим вперед   (str.substr(5, 3))
                            li порядковый номер первой буквы подстроки в строке   (str.indexOf("text"))
                            li порядковый номер подстроки в строке с конца   (str.lastIndexOf("text"))
                            li замещение тескта   (str.replace("oldText","newText"))
                            li убирает первые 10 символов в строке   (str.slice(10))
                            li разделитель пробел = массив   (str.split(" "))
                            li привеедние к верхнему регистру   (str.toUpperCase())
                            li приведение к нижнему регистру   (str.toLowerCase())
                            li корень числа
                            li возведение в степень (3,5) = 243
                            li число пи
                            li экспонента
                            li вывод с определнной точностью
                            li вывод в консоль (.log .warn .err)
                            li вывести на страницу
                            li открыть новое окно в браузере
                tr
                    td.b 
                        dl
                            dt ПРИМЕР
                                dd if (условие1 && условие2) {
                                    dl
                                        dt 
                                            dd // code
                                dd }
                    td.i
                        ul
                            li 
                            li 
                            li 
                            li 
                tr
                    td.b 
                        dl
                            dt ПРИМЕР 1
                                dd var a = 6;
                                dd if (a > 0 && a < 10 && a % 2 == 0) {
                                    dl
                                        dt 
                                            dd console.log('Значение а чётное, больше нуля и меньше десяти');
                                dd }
                    td.i
                        ul
                            li 
                            li 
                            li 
                            li сработает
                            li 
        textarea(name="comment" cols="30")
           | # Javascript
           |   +-- Типы данных      int, str, bool, NaN, undefined, infinity
           |   +-- Массив           arr = [1,2,3];
           |   +-- Обьект           obj = {color white};
           |   +-- Коллекция        const a = new Set([1,2,3]);
           |   +-- Функция          function name(n){return n};
           |   +-- Оператор выбора  if...else, | switch case
           |   +-- Цикл             for, |  for in, | while
           |   +-- Алгоритм         //линейный, выбора, цикл.
           |   +-- Спецификация     //ES6 + ES7
           |   +-- Методология      //SOLID, KISS, DRY, YAGNI
           | 
           | # UI + UX
           |   +-- таб, слайдер ...
           | // Set множество (одинаковые эл. удаляються)
           | const fruits = new Set();         //конструктор множества Set
           | fruits.add('apple');              // добавить новый элемент
           | fruits.add('orange');
           | fruits.add('apple');
           | fruits.add(1).add(2).add(3);      // добавить элементы по цепочке
           | fruits.delete('apple');           //удалить элемент колекции
           | fruits.size                       // количество элементов в множестве
           | fruits.clear();                   // очистить множество
           | console.log(fruits.has('apple')); // че то там...
           | 
           | // создать колекцию наполненую данными сразу
           | const vegetables = new Set([
           | 	'tomato',
           | 	'potato',
           | 	'broccoli'
           | ]);
           | --------------------------------------
           | // перебрать - итерировать
           | for (let vegetable of vegetables) {
           | 	console.log(vegetable);
           | };
           | --------------------------------------
           | // обьединение множества
           | const a = new Set([1,2,3]);
           | const b = new Set([4,3,2]);
           | const union = new Set([...a, ...b]);
           | console.log(union);
           | ---------------------------------
           | // передать массив в множество
           | let arr = [1,2,3,4,5];
           | let numbers = new Set(arr);
           | console.log(numbers);
           | -----------------------------
           | // наследование
           | var animal = {
           |     eats: 'ham ham'
           | }
           | var dog = {
           |     say: 'gav'
           | }
           | dog.__proto__ = animal;
           | console.log('dog do -', dog.eats);
           | ---------------------------------------
           | //вывести по this
           | var user_1 = {
           |     name: 'jhon',
           |     this_Name: thisName
           | };
           | var user_2 = {
           |     name: 'smit',
           |     this_Name: thisName
           | };
           | function thisName() {
           |     return this.name;
           | }
           | console.log(user_2.this_Name());
           | ---------------------------------------------------
           | // массив из обьектов
           | var user = {
           |     data: [
           |         {name: "jhon"},
           |         {name: "Smith"}
           |     ]
           | };
           | console.log(user.data[0].name);
           | ---------------------------------------------------
           | // цикл
           | var step = 0;
           | for(step; step < 5; step++){
           |     console.log(`Go ${step} spep on west`);
           | }
           | ---------------------------------------------------
           | //перебор элементов массива
           | var arr = [
           |     "James",
           |     "Bond",
           |     34
           | ];
           | for(var i of arr){
           |     console.log(i);
           | }
           | ----------------------------------------------------------------------




    section.tabContent 
        h1 Vue.js 
        br
        table.tabContent_js_table
                tr
                    td.b 
                        dl
                            dt Директивы
                                dd v-on
                                dd v-bind
                                dd v-for
                                dd v-if
                                dd v-html
                            dt Модификаторы
                                dd .prevent
                    td.i 
                        ul
                            li
                            li -
                            li -
                            li -
                            li -
                            li -
                            li
                            li -
                tr
                    td.b
                        ul 
                            li {{ msg }}
                    td.i 
                        ul
                            li -
        h4 пример 1
        textarea(name="comment" cols="30")
           | <div id="app">
           |    {{ message }}
           | </div>
        textarea
           |var app = new Vue({
           |    el: '#app',
           |    data: {
           |        message: 'Привет, Vue!'
           |    }
           |})

        h4 пример 2
        textarea
           | <div id="app-3">
           |    <span v-if="seen">Сейчас меня видно</span>
           | </div>
        textarea
           |var app3 = new Vue({
           |    el: '#app-3',
           |    data: {
           |        seen: true
           |    }
           |})



    section.tabContent 
        h1 jQuery
        br
        textarea
            | $(document).ready(function() {
            |   // Stuff here
            | });
        textarea
            | //ВЫБОР ЭЛЕМЕНТОВ
            | $("*")      //все элементы
            | $("#box")   //выбрать id="box"
            | $(".box")   //выбрать class="box"
            | $("div")    //выбрать по тегу div, p, h1, ...
            | $("#content2 div.someBlock")  //вернет div-элементы с классом someBlock, которые находятся внутри элемента с идентификатором content2
            | $("[value = 5]")              //вернет все элементы с атрибутом value, равным 5.
        textarea
            | //ПРИВЯЗКА К ЭЛЕМЕНТАМ ДОКУМЕНТА
            | $("div a").сss("color", "red");       //Элемент1 Элемент2 — находим Элемент2, который располагается внутри контейнера Элемента1
            | $("div > a").css("color","red");      //Элемент1 > Элемент2 — находим Элемент2, который является дочерним для Элемента A.
            | $("div + a").css("color", "red");     //Элемент1 + Элемент2 — находим Элемент2, который является соседним для Элемент A и следует сразу после него.
            | $("div ~ a").css("color", "red");     //Элемент 1 ~ Элемент2 — находим Элемент2, который следует после Элемента 1, причем необязательно сразу.
            | $("div span a").css("color", "red");  //Цвет текста ссылки станет красным, если тег A расположен внутри тега span, а тот в свою очередь вложен в тег div
        textarea
            | //ВЫБОР СЕЛЕКТОРОВ ПО АТРИБУТАМ
            | "[name]"               //содержащие атрибут name
            | "[name = value]"       //name совпадает с value
            | "[name != value]"      //name не совпадает с value
            | "[name ^= value]"      //name начинается с value
            | "[name $= value]"      //name заканчивается на value
            | "[name *= value]"      //name содержит подстроку value
            | "[name ~= value]"      //name содержит слово value
            | "[name |= value]"      //name имеют префикс value (равен value или имеет вид: "value-*")
            | "[first][second][..."  //элементы, соответствующие всем заданным условиям на атрибуты одновременно
        textarea
            | //ПРОСТЫЕ ФИЛЬТРЫ
            | $(":focus")          //элемент в фокусе
            | $(":first")          //первый найденный элемент
            | $(":last")           //последний найденный элемент
            | $(":eq( )")          //элемент идущий под заданным номером среди выбранных
            | $(":not(selector)")  //все найденные элементы, кроме указанных в selector
            | $(":even")           //элементы с четными номерами позиций, в наборе выбранных элементов
            | $(":odd")            //элементы с нечетными номерами позиций, в наборе выбранных элементов
            | $(":gt( )")          //элементы с индексом превышающим n
            | $(":lt( )")          //элементы с индексом меньшим, чем n
            | $(":header")         //элементы, являющиеся заголовками (с тегами h1, h2 и.т.д.)
            | $(":animated")       //элементы, которые в данный момент задействованы в анимации
            | $(":hidden")         //невидимые элементы страницы
            | $(":visible")        //видимые элементы страницы
            | $(":lang(language)") //элементы, в которых указаны языки содержимого
            | $(":root")           //элемент, который является корневым в документе.
        textarea
            | $(":contains(text)")  //элементы, содержащие заданный текст
            | $(":empty")           //элементы без содержимого
            | $(":has(selector)")   //элементы, которые содержат хотя бы один элемент из selector
            | $(":parent")          //непустые элементы
        textarea
            | $(":button")    //с тегом button
            | $(":radio")     //переключатели
            | $(":checkbox")  //флажки
            | $(":text")      //текстовые поля
            | $(":password")  //поля ввода пароля
            | $(":file")      //поля загрузки файлов
            | $(":submit")    //кнопка отправки формы
            | $(":reset")     //кнопка очистки формы
            | $(":image")     //изображения для отправки формы
            | $(":input")     //формы
            | $(":selected")  //выбранные элементы
            | $(":focus")     //элементы в фокусе
            | $(":checked")   //элементы (со статусом checked)
            | $(":enabled")   //активные элементы формы
            | $(":disabled")  //неактивные элементы формы
        textarea
            | $(":first-child")          //элементы, расположенные первыми в своих родительских элементах
            | $(":last-child")           //элементы, расположенные последними в своих родительских элементах
            | $(":nth-child( )")
            | $(":nth-child-last( )")    //элементы, расположенные определенным образом в родительских элементах (четные, нечетные, идущие под заданным номером)
            | $(":only-child")           //элементы, являющиеся единственными потомками в своих родительских элементах
            | $(":only-of-type")         //элементы, являющиеся единственными, удовлетворяющими селектору, потомками в своих родительских элементах
            | $(":first-of-type")        //те из выбранных элементов, которые первыми встречаются в своих родительских элементах
            | $(":last-of-type")         //те из выбранных элементов, которые последними встречаются в своих родительских элементах
            | $(":nth-first-of-type( )")
            | $(":nth-last-of-type( )")  //те из выбранных элементов, которые в определенную очередь встречаются в своих родительских элементах
        textarea
            | //МЕТОДЫ ЭЛЕМЕНТОВ
            | .hide()           //скрыть обьект
            | .show()           //показать элемент
            | .addClass("n_c")  //добавить класс
            | .removeClass()    //удаляет класс
            | .attr()           //значение атрибута у элементов на странице
            | .val()            //значение value у элементов
            | .css()            //CSS параметры элемента
            | .height()         //высота элемента
            | .width()          //ширина элемента
            | .position()       //позиция элемента
            | .html()           //Возвращает/изменяет (в зависимости от числа параметров) html-содержимое элементов на странице
            | .text()           //текст в элементах на странице
            | .remove()         //Удаляет элементы на странице
            | .empty()          //Удаляет содержимое элементов на странице
            | .unwrap()         //Удаляет родительские элементы, при этом их содержимое остается на месте
            | .replaceWith() 
            | .replaceAll()     //Заменяет одни элементы страницы на другие.
            | .clone()          //Возвращает копию выбранных элементов страницы.
        textarea
            | .children()      //Находит все дочерние элементы у выбранных элементов. При необходимости, можно указать селектор для фильтрации.
            | .closest()       //Находит ближайший, соответствующий заданному селектору элемент, из числа следующих: сам выбранный элемент, его родитель, его прародитель, и так далее, до начало дерева DOM.
            | .find()          //Находит элементы по заданному селектору, внутри выбранных элементов.
            | .next()          //Находит элементы, которые лежат непосредственно после каждого из выбранных элементов.
            | .nextAll()       //Находит элементы, которые лежат после каждого из выбранных элементов.
            | .nextUntil()     //Находит элементы, которые лежат после каждого из выбранных, но не дальше элемента, удовлетворяющего заданному селектору.
            | .offsetParent()  //Возвращает ближайшего предка c позиционированием, отличным от static (позиционирование по умолчанию).
            | .parent()        //Находит родительские элементы у всех выбранных элементов.
            | .parents()       //Находит всех предков у выбранных элементов, т.е. не только прямых родителей, но и прародителей, прапрародителей и так далее, до начало дерева DOM.
            | .parentsUntil()  //Находит предков, как и .parents(), но прекращает поиск перед элементом, удовлетворяющим заданному селектору.
            | .prev()          //Находит элементы, которые лежат непосредственно перед каждым из выбранных элементов.
            | .prevAll()       //Находит элементы, которые лежат перед каждым из выбранных элементов.
            | .prevUntil()     //Находит элементы, которые лежат перед каждым из выбранных, но не дальше элемента, соответствующего заданному селектору.
            | .siblings()      //Находит все соседние элементы (под соседними понимаются элементы с общим родителем).
        textarea
            | //ФИЛЬТРАЦИЯ НАБОРА
            | .eq()      //Возвращает элемент, идущий под заданным номером в наборе выбранных элементов.
            | .filter()  //Фильтрует набор выбранных элементов с помощью заданного селектора или функции.
            | .first()   //Возвращает первый элемент в наборе.
            | .has()     //Фильтрует набор выбранных элементов, оставляя те, которые имеют потомков, соответствующих селектору.
            | .is()      //Проверяет, содержится ли в наборе, хотя бы один элемент удовлетворяющий заданному селектору.
            | .last()    //Возращает последний элемент в наборе.
            | .not()     //Возвращает элементы, не соответствующие заданным условиям.
            | .slice()   //Возвращает элементы с индексами из определенной области (например от 0 до 5).
        textarea
            | //ОБХОД НАБОРА
            | .each()    //Вызывает заданную функцию для каждого элемента набора.
            | .map()     //Вызывает заданную функцию для каждого элемента набора, и в итоге создает новый набор, составленный из значений, возвращенных этой функцией.
        textarea
            | //ДРУГИЕ МЕТОДЫ
            | .add()      //Добавляет заданные элементы в набор.
            | .andSelf()  //Добавляет элементы из предыдущего набора, к текущему (речь идет об одной цепочке методов).
            | .contents() // Находит все дочерние элементы у выбранных элементов. В результат, помимо элементов, включается и текст.
            | .end()      //Возвращает предыдущий набор элементов в текущей цепочке методов.
        textarea
            | //РАБОТА С ЭЛЕМЕНТАМИ НАБОРА
            | .get()      //Возвращяет DOM-элементы, хранящиеся в объекте jQuery.
            | .toArray()  //Возвращяет все DOM-элементы, хранящиеся в объекте jQuery, в виде массива.
            | .index()    //Возвращяет индекс заданного элемента в наборе.
            | .size()     //Возвращяет количество выбранных элементов.
        textarea
            | //СПИСОК СВОИСТВ
            | $.browser      //Информация об используемом браузере.
            | $.support      //Особенности используемого браузера.
            | $.fx.off       //Отменяет выполнение всех анимаций.
            | $.fx.interval  //Размер задержки между соседними кадрами анимации.
            | .context       //Контекст, заданный в методе $() (jQuery()).
            | .length        //Число выбранных элементов.
            | .selector      //Селектор, заданный в методе $() (jQuery()).
        textarea
            | //СОБЫТИЯ БАЗОВЫЕ
            | .on()              //Универсальный метод для установки обработчиков событий на выбранные элементы страницы.
            | .off()             //Удаляет обработчики, установленные с помощь .on().
            | .bind()            //Устанавливает обработчик события на выбранные элементы страницы. Обработчик не сработает на элементах, появившихся после его установки.
            | .live()            //Устанавливает обработчик события на выбранные элементы страницы. Обработчик сработает и на элементах, появившихся после его установки.
            | .delegate()        //Устанавливает обработчик события на выбранные элементы страницы. Элементы выбираются с помощью уточняющего селектора. Обработчик будет действовать и на элементах, появившихся после его установки.
            | .one()             //Устанавливает обработчик события на выбранные элементы страницы, который сработает только по одному разу, на каждом из элементов.
            | .unbind()          //Удаляет обработчик событий у выбранных элементов.
            | .die()             //Удаляет обработчик событий, который был установлен с помощью live().
            | .undelegate()      //Удаляет обработчик событий, который был установлен с помощью delegate().
            | .trigger()         //Выполняет указанное событие и запускает его обработчик.
            | .triggerHandler()  //Запускает обработчик указанного события, без его выполнения.
            | jQuery.proxy()     //По заданной функции, создает другую, внутри которой переменная this будет равна заданному значению.
            | event              //Объект, содержащий данные о текущем событии. Передается всем обработчикам событий.
        textarea
            | //СОБЫТИЯ МЫШИ
            | .click()       //"клика" мышью по элементу, либо, запускает это событие.
            | .dblclick()    //двойного "клика" мышью по элементу, либо, запускает это событие.
            | .hover()       //двух событий: появления/исчезновения курсора над элементом.
            | .mousedown()   //нажатия кнопки мыши, либо, запускает это событие.
            | .mouseup()     //поднятия кнопки мыши, либо, запускает это событие.
            | .mouseenter()  //появления курсора в области элемента, либо, запускает это событие. Появление этого события, отработано лучше, чем стандартного mouseover.
            | .mouseleave()  //выхода курсора из области элемента, либо, запускает это событие. Появление этого события, отработано лучше, чем стандартного mouseout.
            | .mousemove()   //движения курсора в области элемента, либо, запускает это событие.
            | .mouseout()    //выхода курсора из области элемента, либо, запускает это событие.
            | .mouseover()   //появления курсора в области элемента, либо, запускает это событие.
            | .toggle()      //Поочередно выполняет одну из двух или более заданных функций, в ответ на "клик" по элементу.
        textarea
            | //СОБЫТИЯ КЛАВИАТУРЫ
            | .keydown()   //перехода клавиши клавиатуры в нажатое состояние.
            | .keyup()     //возвращение клавиши клавиатуры в ненажатое состояние.
            | .keypress()  //ввода символа с клавиатуры.
        textarea
            | //СОБЫТИЯ ФОРМЫ
            | .focus()     //получения фокуса.
            | .blur()      //потери фокуса.
            | .focusin()   //получения фокуса самим элементом или одним из его дочерних.
            | .focusout()  //потери фокуса самим элементом или одним из его дочерних.
            | .select()    //выделения текста.
            | .submit()    //отправки формы.
            | .change()    //изменения элемента формы.
        textarea
            | //СОБЫТИЯ ЗАГРУЗКИ СТРАНИЦЫ
            | .ready()     //готовность дерева DOM.
            | .load()      //завершение загрузки элемента.
            | .unload()    //уход со страницы (при переходе по ссылке, закрытии браузера и.т.д.).
        textarea
            | //СОБЫТИЯ БРАУЗЕРА
            | .error()     //ошибки при загрузке элементов (например отсутствие необходимой картинки на сервере).
            | .resize()    //изменения размеров окна браузера.
            | .scroll()    //"прокрутки" элементов документа.
        textarea
            | //СОБЫТИЯ ФОРМЫ
            | .focus()     //получения фокуса.
            | .blur()      //потери фокуса.
            | .focusin()   //получения фокуса самим элементом или одним из его дочерних.
            | .focusout()  //получения фокуса самим элементом или одним из его дочерних.
            | .select()    //выделения текста.
            | .submit()    //отправки формы.
        textarea
            | //РАЗНОЕ
            | jQuery.param()     //Преобразует массив объектов в строку, пригодную для использования в URL.
            | .serialize()       //Преобразует данные формы в строку, пригодную для использования в URL.
            | .serializeArray()  //Преобразует данные формы в массив объектов вида {name:"name", value:"val"}.
            | .val( )            //Возвращает/изменяет (в зависимости от числа параметров) значение атрибута value у элементов на странице
        textarea
            | //УПРАВЛЕНИЕ АНИМАЦИЕЙ
            | .animate()          //Выполняет анимацию, которая была создана пользователем.
            | .queue()            //Предоставляет/изменяет (в зависимости от параметров) очередь функций.
            | .clearQueue()       //Очищает очередь функций.
            | .dequeue()          //Начинает выполнение следующей функции в очереди.
            | .stop()             //Останавливает выполнение текущей анимации.
            | .delay()            //Приостанавливает выполнение следующих анимаций на заданное время.
            | .toggle()           //Поочередно выполняет вызов одной из нескольких заданных функций.
            | jQuery.fx.interval  //Содержит временной промежуток между кадрами анимации.
            | jQuery.fx.off       //Отменяет выполнение всех анимаций.
        textarea
            | //СТАНДАРТНЫЕ АНИМАЦИИ
            | .hide()
            | .show()         //Скрывает/показывает элементы на странице (за счет плавного изменения его размера и прозрачности).
            | .slideUp()
            | .slideDown()    //Разворачивает/сворачивает элементы на странице (за счет плавного изменения высоты элементов).
            | .slideToggle()  //Поочередно разворачивает/сворачивает элементы на странице, как это делают .slideUp() и .slideDown().
            | .fadeIn()
            | .fadeOut()      //Скрывает/показывает элементы на странице за счет плавного изменения прозрачности.
            | .fadeTo()       //Плавно изменяет прозрачность элементов.
            | .fadeToggle()   //Поочередно скрывает/показывает элементы на странице, как это делают .fadeIn() и .fadeOut().
        textarea
            | //СПИСОК ФУНКЦИЙ
            | $.contains()       //Проверяет, содержится ли один элемент страницы внутри другого.
            | $.extend()         //Объеденяет два или более javascript-объекта.
            | $.globalEval()     //Выполняет заданный скрипт в глобальной области видимости.
            | $.grep()           //Ищет в заданном массиве элементы удовлетворяющие условиям.
            | $.inArray()        //Ищет в заданном массиве конкретный элемент и возвращает его индекс (или -1 в случае отсутствия элемента).
            | $.isArray()        //массив?
            | $.isEmptyObject()  //Проверяет наличие (точнее отсутствие) содержимого в заданном объекте.
            | $.isFunction()     //функция?
            | $.isNumeric()      //число?
            | $.isPlainObject()  //Проверяет, является ли заданный элемент пользовательским объектом (задан средствами "{}" или "new Object").
            | $.isWindow()       //объект типа window?
            | $.isXMLDoc()       //Проверяет, находится ли DOM-объект внутри XML-документа (или сам является XML-документом).
            | $.makeArray()      //Конвертирует массивоподобные объекты, в массивы.
            | $.map()            //Выполняет заданную функцию для каждого элемента массива или каждого поля объекта в отдельности.
            | $.merge()          //Объединяет содержимое нескольких массивов, записывая его в первый из них.
            | $.noop()
        textarea
            | //ПУСТАЯ ФУНКЦИЯ
            | $.parseJSON()     //строка с json-данными в javascript-объект.
            | $.parseXML()      //строка xml в xml-документ.
            | $.proxy()         //По заданной функции, создает другую, внутри которой переменная this будет равна заданному значению.
            | $.trim()          //Удаляет пробелы из начала и конца заданной строки.
            | $.type()          //Определяет класс заданного объекта (речь идет о внутренних классах javascript: string, boolean и т.д.).
            | $.unique()        //Сортирует заданный массив с DOM-элементами, выстраивая их в порядке расположения в DOM, а так же удаляя повторения.
        textarea
            | //пример
            | $("p#hid").hide();  //скрыть обьект 
        textarea                                 
            | $(document).ready(function(){
            |     $("#box")
            |         .css("color","white")
            |         .css("border","1px solid tomato")
            |         .css("height", "50")
            |         .css("width", "100")
            |         .css("background", "blue");
            |     $("#hide").click(function () {
            |         $("#box")
            |             .hide();
            |     });
            |     $("#show").click(function () {
            |         $("#box")
            |             .show();
            |     })
            | });
        textarea
            | $(".content").offset({top:30, left:100})
        textarea
            | $("button").click(function () {   
            |   $("p").show("slow");   
            | });

    section.tabContent 
        h1 Python
        br
        textarea
            | "text" * 3           # 'texttexttext'
            | "text".upper()       # 'TEXT'
            | len("text")          # 3
        textarea
            | []                                  # ������
            | var_name = [3, 42, 12, 19, 30, 59]  # ������
            | var_name.sort()      # ����������
            | var_name.reverse()   # ���������� ��������
            | var_name.append(5)   # ����������
            | var_name.pop(5)      # ��������
            | len("text")          # 3
            | len(str(123456))     # 6
            | print(var_name[0])   # 59
        textarea
            | {}                   # �������
            | var_name = {
            |     'name': 'text',
            |     'country': 'Poland',
            |     'favorite_numbers': [7, 42, 92]
            |     }
        textarea
            | print(var_name['name'])  # text
            | var_name['favorite_language'] = 'Python'  # �������� ����/��������
            | ==              # ��������� �� ���������
            | !=              # ��������� �� ��������
            | 5>2             # true
            | 5>2 and 5>3     # true
            | 5>2 and 5>10    # false
            | 5>2 or 5>10     # true
            | True
            | ''' ���������� '''
            | # ����������
        textarea
            | a = 12                          # ����� �����
            | b = 13.78                       # ����� � ��������� ������
            | c = "������ ���"                # ������
            | d = [1, "���", 1.12]            # ������
            | e = (2, 12, 56)                 # ������
            | f = {1: "������", 2: "������"}  # �������
            | g = True                        # ��� False (���������� ��������)
            | + - * / **                      # ����.�����.�����.�����.������ � �������  (e = 34**2)
            | print("text")                   # ������� �� ����� �����
            | line = "��� ������"
            | print(line)
            | print(len(line))    # ����� ������
            | print(line[0])      # ������ �������, ���� ���������� � ����
            | print(line[1])      # ������ �������
            | print(line[-1])     # ��������� �������
            | print(line[1:4])    # ����
            | print(line[:4])     # ���� ����
            | print(line[4:])     # ��� �������
            | print(line + line)  # ���������� ������ � ������
            | print(line * 3)     # ��� ���� �����
        textarea
            | line1 = "��� ������"
            | line2 = "��� ������ ������"
            | print(line1.replace('��', '��'))  # ������ ����� ��������� ������
            | print(line1.find('��'))           # ����� �������� ���������
            | print(line1.split(' '))           # ��������� ������ �� �����������
            | print(line1.upper())              # �������������� �������� � ������� �������
            | print(line2.lower())              # �������������� �������� � ������ �������
        textarea
            | mylist = [1, '���', 3.1]
            | print(len(mylist))                # ����� ��������� � ������
            | print(mylist[0])                  # ������ � ������� ��������
            | mylist.append("new")              # ��������� ����� ������� � ����� ������
            | print("��������---->", mylist)
            | mylist.pop(0)                     # ������� ������ �������
            | print("�����---->", mylist)      # ��������� ������
            | superlist = [[1, 2, 3], [4, 5, 6]]
            | print(superlist)
            | print(superlist[1][1])            # �������� 2 ������� �� ������ ������
        textarea
            | mydic = {1: "������", 2: "������"}
            | print("������ ������� � ������ 1 ------>", mydic[1])
            | superdic = {
            | 	'name': {'first': '���������', 'second': '������'},
            | 	'job': ['���', '���']
            | 	} 
            | print(superdic['name']['second'], "--->", superdic['job'][0])
        textarea
            | t = ("������", "������", "������")
            | print(t[1])  # ��������� ������ �������
            | t = ((1, 2, 3, 4), (5, 6, 7, 8, 9))
            | print(t[0][0])
        textarea
            | f = open('myfile', 'r')  # ��������� � ������ ������
            | text = f.read()  # ���������
            | f.close()  # ��������� ����
            | print(text)  # ������� ���������
            | f = open('myfile', 'w')  # ��������� � ������ ������
            | f.write("Yo!")  # ����������
            | f.close()  # ��������� ����
        textarea
            | # ������������� ��������� ���������
            | # �������� ��������� � ����� ������ ������� ����
            | with open("myfile.py", 'w') as f:
            |     f.write("Yo!")
            | a = "������"
            | for x in a:
            |     print("�1->", x)
        textarea
            | b = [1, 2, 3, 4, 5]
            | for x in b:
            |     print("�2--->", x)
        textarea
            | for x in range(10):
            |     print("�3----->", x)
        textarea
            | def myfun():
            |     print("������� ��� ����������")
            | myfun()  # ����� ������� myfun
        textarea
            | def sum(a, b=0):  # b ����� �������� �� ���������
            |     c = a + b
            |     return c
        textarea
            | print(sum(2, 3))
            | print(sum(2))
        textarea
            | #oop
            | class Car:
            |     mod = 'ford'
            |     age = 30
            |     color = 'green'
        textarea
            | class Moto:
            |     mod = 'Ymaha'
            |     age = 10
            |     color = 'red'
        textarea
            | print(Car.mod)
            | print(Moto.mod)
        textarea
            | a = Car()
            | a.name = 'drive_1'
            | print(a.name)
        textarea
            | class Test_fun:
            |     def fun():
            |        return 'Hello World'
        textarea
            | print(Test_fun.fun())

    section.tabContent 
        div.tabs
            input(type="radio" name="tabs" checked)#tab-last_3
            label(for="tab-last_3")
                p Java Cod
            input(type="radio" name="tabs")#tab-last_4
            label(for="tab-last_4")
                p Java Examples
            div#tab-content-6.tab-content
                h1 Java Cod
                textarea 
                    | 
                    | "JAVA CORE==================================================================================="
                    | +-- МОДИФИКАТОРЫ ДОСТУПА
                    | |   +-- Private                       "модификатор доступа"
                    | |   +-- Default                       "модификатор доступа"
                    | |   +-- Protected                     "модификатор доступа"
                    | |   +-- Public                        "модификатор доступа"
                    | +-- КЛАСС
                    | |   +-- abstract class MyClass{}      "абстрактный клас"
                    | |   +-- class MyClass{}               "класс"
                    | |   |   +-- class MyClass{}           "вложенный класс нестатический"
                    | |   |   +-- int j                     "поля     (информация, данные)"
                    | |   |   +-- metod()                   "методы   (работа с информацией)"
                    | |   |   +-- static Class MyClass{}    "вложенный класс статический"
                    | |   +-- КЛАС ОБЕРТКА
                    | |   |   +-- Byte                      "класс обертка"
                    | |   |   +-- Short                     "класс обертка"
                    | |   |   +-- Integer                   "класс обертка"
                    | |   |   +-- Long                      "класс обертка"
                    | |   |   +-- Double                    "класс обертка"
                    | |   |   +-- Float                     "класс обертка"
                    | |   |   +-- Character                 "класс обертка"
                    | |   |   +-- Boolean                   "класс обертка"
                    | |   +-- FILE                          "Клас для работы с файлами"
                    | |   |   +-- getAbsolutePath()         "абсолютный путь файла, начиная с корня системы"
                    | |   |   +-- canRead()                 "доступно для чтения"
                    | |   |   +-- canWrite()                "доступно для записи"
                    | |   |   +-- exists()                  "файл существует или нет"
                    | |   |   +-- getName()                 "возвращает имя файла"
                    | |   |   +-- getParent()               "возвращает имя родительского каталога"
                    | |   |   +-- getPath()                 "путь"
                    | |   |   +-- lastModified()            "дата последнего изменения"
                    | |   |   +-- isFile()                  "объект является файлом, а не каталогом"
                    | |   |   +-- isDirectory               "объект является каталогом"
                    | |   |   +-- isAbsolute()              "возвращает true, если файл имеет абсолютный путь"
                    | |   |   +-- renameTo(File newPath)    "переименовывает файл. В параметре указывается имя нового имени файла. Если переименование прошло неудачно, то возвращается false"
                    | |   |   +-- delete()                  "удаляет файл. Также можно удалить пустой каталог"
                    | |   |   +-- exists()
                    | |   |   +-- getName()
                    | |   |   +-- getParent()
                    | |   |   +-- getPath()
                    | |   |   +-- binarySearch(List list, Object key)
                    | |   |   +-- binarySearch(List list, Object key, Comparator c)
                    | |   |   +-- void put(Object key, Object value)
                    | |   |   +-- Object get(Object key)
                    | |   |   +-- pSet keySet()
                    | |   |   +-- pboolean containsKey(Object key)
                    | |   |   +-- Object getKey()
                    | |   |   +-- Object getValue()
                    | |   |   +-- Object setValue(Object value)
                    | |   |   +-- lastModified()
                    | |   |   +-- isFile()
                    | |   |   +-- isDirectory()
                    | |   |   +-- isAbsolute()
                    | |   |   +-- renameTo(File newPath)
                    | |   |   +-- delete()
                    | |   |   +-- listFiles()
                    | |   |   +-- inputStream (чтение)
                    | |   |   +-- OutputStream (запись)
                    | |   |   +-- Reader (чтение)
                    | |   |   +-- Writer (запись)
                    | |   |   +-- -int available()
                    | |   |   +-- -int read()
                    | |   |   +-- -int read(byte[] buf, int offset, int count)
                    | |   |   +-- -long skip(long n)
                    | |   |   +-- -void close()
                    | |   |   +-- FileInputStream
                    | |   |   +-- FilterInputStream
                    | |   |   +-- PipedInputStream
                    | |   |   +-- SequenceInputStream
                    | |   |   +-- ByteArrayInputStream
                    | |   |   +-- StringBufferInputStream
                    | |   |   +-- ObjectInputStream
                    | |   |   +-- -void  write(int b)
                    | |   |   +-- -void write(byte[] buf, int offset, int count)
                    | |   |   +-- -void flush()
                    | |   |   +-- -void close()
                    | |   |   +-- FileOutputStream
                    | |   |   +-- FilterOutputStream
                    | |   |   +-- read()
                    | |   |   +-- close()
                    | |   |   +-- InputStreamReader
                    | |   |   +-- FileReader
                    | |   |   +-- BufferedReader
                    | |   |   +-- FilterReader
                    | |   |   +-- CharArrayReader
                    | |   |   +-- PipedReader
                    | |   |   +-- StringReader
                    | |   |   +-- OutputStreamWriter
                    | |   |   +-- FileWriter
                    | |   |   +-- BufferedWriter
                    | |   |   +-- FilterWriter
                    | |   |   +-- CharArrayWriter
                    | |   |   +-- PipedWriter
                    | |   |   +-- StringWriter
                    | |   |   +-- clear()
                    | |   |   +-- flip()
                    | |   |   +-- rewind()
                    | |   |   +-- getChannel()
                    | |   |   +-- position(long)
                    | |   |   +-- read(ByteBuffer)
                    | |   |   +-- lock()
                    | |   |   +-- read(ByteBuffer, int)
                    | |   |   +-- readObject()
                    | |   |   +-- run()
                    | |   |   +-- start()
                    | |   |   +-- sleep(long millis)
                    | |   |   +-- yield()
                    | |   |   +-- Executors.newSingleThreadExecutor()
                    | |   |   +-- Executors.newFixedThreadPool(int numThreads)
                    | |   |   +-- Executors.newCachedThreadPool()
                    | |   |   +-- Thread.setPriority()
                    | |   |   +-- boolean isDaemon()
                    | |   |   +-- setDaemon(boolean on)
                    | |   |   +-- wait()
                    | |   |   +-- notify()
                    | |   |   +-- notifyAll()
                    | |   |   +-- deadlock()
                    | |   |   +-- run()
                    | |   |   +-- destroy() 
                    | |   |   +-- interrupt()
                    | |   |   +-- isInterrupted()
                    | |   |   +-- interrupted()
                    | |   |   +-- isAlive()
                    | |   |   +-- sleep()
                    | |   |   +-- oin()
                    | |   |   +-- volatile()
                    | |   +-- STRING                 "Класс для работы со троками"
                    | |   |   +-- toString()         "обьект в виде строки"
                    | |   |   +-- concat()           "обьединение строк"
                    | |   |   +-- length()           "возвращает длину строки"
                    | |   |   +-- charAt()           "возвращает символ по указанному индексу"
                    | |   |   +-- charCodeAt()       "Возвращает код символа, находящегося в данной позиции строки."
                    | |   |   +-- fromCharCode()     "Создает строку из символов, заданных кодами Unicode."
                    | |   |   +-- localeCompare()    "Сравнивает две строки с учетом языка операционной системы."
                    | |   |   +-- match()            "Сопоставляет строку с регулярным выражением"
                    | |   |   +-- search()           "Ищет сопоставление строки с регулярным выражением"
                    | |   |   +-- slice()            "Извлекает часть строки и возвращает новую строку"
                    | |   |   +-- substr()           "Возвращает подстроку, заданную позицией и длиной"
                    | |   |   +-- substring(int beginIndex, int endIndex)  "Возвращает подстроку, заданную начальной и конечной позициями"
                    | |   |   +-- toLocaleLowerCase()    "Преобразует все буквы строки в строчные с учетом языка операционной системы"
                    | |   |   +-- toLocaleUpperCase()    "Преобразует все буквы строки в прописные с учетом языка операционной системы"
                    | |   |   +-- valueOf()              "Возвращает примитивное значение объекта"
                    | |   |   +-- char[]  toCharArray()  "строку в массив символов"
                    | |   |   +-- split(String regex)    "разбиения строк на части"
                    | |   |   +-- boolean contains(CharSequence s)
                    | |   |   +-- boolean  startsWith(String prefix)
                    | |   |   +-- indexOf()              "первое вхождение символа"
                    | |   |   +-- lastindexOf()          "последние вхождение символа"
                    | |   |   +-- toLowerCase()          "нижний регистр"
                    | |   |   +-- toUpperCase()          "верхний регистр"
                    | |   |   +-- trim()                 "отсечь на концах строки пустые символы;"
                    | |   |   +-- replace()              "замена символов один на другой"
                    | |   |   +-- equals()               "проверка индентичности строк"
                    | |   |   +-- compareTo()            "проверяет идентичность строк (возвращ)"
                    | |   |   +-- compareToIgnoreCase()  "сравн строк без учета регистра"
                    | |   +-- SCANNER                    "клас для ввода данных с клавиатуры"
                    | |   |   +-- next()                 "считывает строку до перв пробела"
                    | |   |   +-- nextLine()             "считывает всю введенную строку"
                    | |   |   +-- nextInt()              "считывает введенное число int"
                    | |   |   +-- nextBoolean()          "считывает введенное число Boolean "
                    | |   |   +-- nextDouble()           "считывает введенное число double"
                    | |   |   +-- hasNext()              "проверяет, было ли введено слово"
                    | |   |   +-- hasNextInt()           "проверяет, было ли введено число int"
                    | |   |   +-- hasNextDouble()        "проверяет, было ли введено double"
                    | |   +-- JAVA IO API
                    | |   |   +-- InputStream
                    | |   |   +-- OutputStream
                    | |   |   +-- Reader
                    | |   |   +-- Writer
                    | |   |   +-- InputStreamReader
                    | |   |   +-- OutputStreamWriter
                    | |   |   +-- ByteArrayInputStream
                    | |   |   +-- ByteArrayOutputStream
                    | |   |   +-- CharArrayReader
                    | |   |   +-- CharArrayWriter
                    | |   |   +-- FileInputStream
                    | |   |   +-- FileOutputStream
                    | |   |   +-- RandomAccessFile
                    | |   |   +-- RandomAccessFile
                    | |   |   +-- FileReader
                    | |   |   +-- FileWriter
                    | |   |   +-- BufferedInputStream
                    | |   |   +-- BufferedOutputStream
                    | |   |   +-- BufferedReader
                    | |   |   +-- BufferedWriter
                    | |   |   +-- ObjectOutputStream
                    | |   |   +-- ObjectInputStream
                    | |   +-- OBJECT                 "Класс основной"
                    | |       +-- clone()            "клон объекта"
                    | |       +-- equals()           "сравн содео обьект (класса Object)"
                    | |       +-- finalize()         "сбор мусора перед работой GC"
                    | |       +-- hashCode()         "получ уник целого номера"
                    | |       +-- getClass()
                    | |       +-- toString()
                    | |       +-- notify()
                    | |       +-- notifyAll()
                    | |       +-- wait()
                    | +-- ПАКЕТЫ
                    |     +-- java.lang
                    |     +-- java.text
                    |     +-- javax.xml.*            "XML"
                    |     +-- org.w3c.dom.*          "XML"
                    |     +-- org.xml.sax.*          "XML"
                    |     +-- java.lang              "базовая функциональность языка и основные типы"
                    |     +-- java.util              "коллекция классов структур данных"
                    |     +-- java.io                "операции ввода-вывода"
                    |     +-- java.nio               "новый фреймворк для ввода-вывода"
                    |     +-- java.math              "математические операции"
                    |     +-- java.net               "операции с сетями, сокетами, DNS-запросами"
                    |     +-- java.awt               "иерархия основных пакетов для родных компонентов GUI"
                    |     +-- java.security          "генерация ключей, шифрование и дешифрование"
                    |     +-- java.sql               "JDBC"
                    |     +-- javax.swing            "GUI"
                    | +-- ИНТЕРФЕЙС 
                    | |   +-- Runnable
                    | |   +-- Serializable
                    | |   +-- Comparable                 "интерфейс"
                    | |   +-- Comparator                 "интерфейс"
                    | |   +-- Cloneable
                    | |   +-- ListIterator               "интерфейс на подобии Iterator"
                    | |   |   +-- void add(E obj)        "вставляет объект перед элементом"
                    | |   |   +-- boolean hasNext()      "возвращает true, если в коллекции имеется следующий элемент, иначе возвращает false"
                    | |   |   +-- boolean hasPrevious()  "возвращает true, если в коллекции имеется предыдущий элемент, иначе возвращает false"
                    | |   |   +-- E next()               "возвращает следующий элемент, если такого нет, то генерируется исключение NoSuchElementException"
                    | |   |   +-- E previous()           "возвращает предыдущий элемент, если такого нет, то генерируется исключение NoSuchElementException"
                    | |   |   +-- int nextIndex()        "возвращает индекс следующего элемента. Если такого нет, то возвращается размер списка"
                    | |   |   +-- int previousIndex()    "возвращает индекс предыдущего элемента. Если такого нет, то возвращается число -1"
                    | |   |   +-- void remove()          "удаляет текущий элемент из списка."
                    | |   |   +-- void set(E obj)        "присваивает текущему элементу, выбранному вызовом методов next() или previous(), ссылку на объект obj"
                    | |   |   +-- add(E e)
                    | |   |   +-- getAbsolutePath()
                    | |   |   +-- canRead()
                    | |   |   +-- canWrite()
                    | |   +-- Iterator                   "доступ к элементам коллекции"
                    | |   +-- Iterable
                    | +-- ТИПЫ ДАННЫХ
                    | |   +-- Целые числа
                    | |   |   +-- byte
                    | |   |   +-- short
                    | |   |   +-- int
                    | |   |   +-- long
                    | |   +-- Числа с плавоющей точкой
                    | |   |   +-- float
                    | |   |   +-- double
                    | |   +-- Символы
                    | |   |   +-- char                   "символьный тип"
                    | |   +-- Логиеские значения
                    | |   |   +-- boolean                "true / false"
                    | |   +-- Идентификатор
                    | |   |   +-- i, i1, i_1             "варианты имени переменных"
                    | |   |   +-- i, j, in, str          "варианты переменных"
                    | |   +-- Коментарии
                    | |       +-- однострочный           " // текст "
                    | |       +-- многострочный          " /* текст */ "
                    | |       +-- документационный       " /** текст */ "
                    | +-- ПРИВЕДЕНИЕ ТИПОВ
                    | |   +-- явное
                    | |   |   +-- "double drob = 1.1;"
                    | |   |   +-- "int cel = (int) drob;"
                    | |   +-- неявное
                    | +-- РАЗДЕЛИТЕЛИ
                    | |   +-- ()
                    | |   +-- {}
                    | |   +-- []
                    | |   +-- ;
                    | |   +-- ,
                    | |   +-- .
                    | +-- МАССИВ
                    | |   +-- Одномерный
                    | |   |   +-- int []a  = {1, 2, 3}         "создание массива чисел"
                    | |   |       "String [] i = {"F", "A"}"   "создание массива строк"
                    | |   |       "i [1]="A"                    присваивание номеру 1 строки А"
                    | |   |       "i [1]"                      "вывести элемент под номером 1"
                    | |   +-- Многомерный 
                    | |       +-- int [][]a  = {
                    | |           "{ 1, 2},{ 3, 4}"
                    | |           "}"
                    | +-- МЕТОДЫ
                    | |   +-- Статический        "тип метода"
                    | |   +-- Нестатический      "тип метода"
                    | |   +-- metod()            "вызов метода без аргумента и функции"
                    | |   |   +-- public         "метод доступен для всех других классов"
                    | |   |   +-- protected      "метод доступен для подклассов данного класса и других классов пакета"
                    | |   |   +-- private        "метод доступен только внутри класса, где он определен"
                    | |   |   +-- abstract       "метод должен быть явно определен в подклассе"
                    | |   |   +-- static         "метод является методом самого класса, а не экземпляра"
                    | |   |   +-- final          "метод не может быть переопределен в подклассах"
                    | |   |   +-- synchronized   "запрещает нескольким потокам одновременный доступ к методу"
                    | |   |   +-- native         "метод будет реализован на другом языке программирования"
                    | |   |   +-- strictfp       "в методе используется повышенная точность вычислений с плавающей точкой"
                    | |   +-- NameMetod()        "Конструктор"
                    | |   |   +-- this()         "ключевое слово"
                    | |   |   +-- super()        "ключевое слово"
                    | |   +-- metod( аргумент ) { функция 1 }         "вызов метода"
                    | |   +-- super.metod( аргумент ) { функция 2 }   "вызов метода супер класса"
                    | +-- АННОТАЦИЯ
                    | |   +-- @Retention         "аннотации к другим аннотациям. Определяет политику удержания"
                    | |   +-- @Documented        "сообщает инструменту, что аннотация должна быть документирована"
                    | |   +-- @Target            "задает тип объявления, к которым может быть применима аннотация"
                    | |   +-- @Inherited         "позволяет аннотации супер класса быть унаследованной в подклассе"
                    | |   +-- @Override          "метод, аннотированный как @Override, должен переопределять метод супер класса"
                    | |   +-- @Deprecated        "указывает, что объявление устарело и должно быть заменено более новой формой"
                    | |   +-- @SafeVarargs       "применяется к методам и конструкторам"
                    | |   +-- @SuppressWarnings  "одно или более предупреждений, которые могут быть выданы компилятором следует подавить"
                    | +-- ЦИКЛ
                    | |   +-- for                "для"
                    | |   |   "for (i=0; i<10; i++){"
                    | |   |   "   System.out.println("Text");"
                    | |   |   "}"
                    | |   +-- while              "пока"
                    | |   |   "while (i < 10){"
                    | |   |   "	System.out.println(i);"
                    | |   |   "i++;"
                    | |   +-- do while           "выполнять пока..."
                    | |       "do {"
                    | |       "	System.out.println(i);"
                    | |       "	i++;"
                    | |       "}"
                    | |       "while (i < 10);"
                    | +-- ОПЕРАТОР
                    | |   +-- Присваивание
                    | |   |   +-- =                "присваивание"
                    | |   +-- Выбора 
                    | |   |   +-- if - else        "если / то"
                    | |   |       "if (a < b){"
                    | |   |       "	System.out.println(true);"
                    | |   |       "}"
                    | |   |       "else {"
                    | |   |       "	System.out.println(false);"
                    | |   |       "}"
                    | |   +-- Ветвления
                    | |   |   +-- switch
                    | |   |       "int i;"                                 "переменная или выражение"
                    | |   |       "switch (i){"                            "запись переменной или выражения"
                    | |   |       "case 1:"                                "условие первое"
                    | |   |       "	System.out.println("Text");"         "результат или действие первого выражения"
                    | |   |       "	break;"                              "оператор выхода, прерывания"
                    | |   |       "case 2:"
                    | |   |       "	System.out.println("Text");"
                    | |   |       "	break;"
                    | |   |       "default:"                               "если нет совпадений то выполнить"
                    | |   |       "	System.out.println("Совпадение");"   "эту команду"
                    | |   +-- Тернарный
                    | |   |   +-- логическоеУсловие ? выражение1 : выражение2  "если лог.усл. == true то 1, если false то 2"
                    | |   |       "int i = (a > b) ? a+b: b-a;"
                    | |   +-- Арифметический
                    | |   |   +-- + - * /      "сум. разн. произв. деление"
                    | |   |   +-- %            "деление по модулю"
                    | |   |   +-- ++ --        "инкремент и декремент"
                    | |   |   +-- += -= *= /=  "с присваиванием"
                    | |   |   +-- %=           "с присваиванием"
                    | |   +-- Битовый
                    | |   |   +-- &            "логический И (прверяет все варианты)"
                    | |   |   +-- &&           "укороченна логический И (булеан)"
                    | |   |   +-- |            "логический ИЛИ"
                    | |   |   +-- ||           "укороченный логический ИЛИ"
                    | |   |   +-- ^            "исключающий ИЛИ"
                    | |   |   +-- ~            "унарный НЕ"
                    | |   |   +-- <<           "сдвиг битов влево"
                    | |   |   +-- >>           "сдвиг битов вправо"
                    | |   |   +-- >>>          "сдвиг битов вправо с заполнением старшего бита нулем"
                    | |   +-- Сравнения
                    | |   |   +-- >            "меньше"
                    | |   |   +-- >=           "больше или равно"
                    | |   |   +-- <            "больше"
                    | |   |   +-- <=           "меньше или равно"
                    | |   |   +-- !=           "не равно"
                    | |   |   +-- ==           "равно"
                    | |   +-- Перехода
                    | |       +-- return       "оператор возвращение данных"
                    | |       +-- break        "прерывание операции с передачей упр. след инструкции"
                    | |       +-- continue     "оператор проодолжения операции"
                    | +-- КОЛЛЕКЦИИ
                    | |   +-- Iterable                   "интерфейс"
                    | |       +-- Collection<E>          "колекция интерфейса Iterable"
                    | |           +-- List<E>
                    | |           |   +-- ArrayList      "класс список на основе массива"
                    | |           |   |   +-- ArrayList namelist = new ArrayList()      "создание пустого списка"
                    | |           |   |   +-- namelist.add("Text")               "добавление нового элемента"
                    | |           |   |   +-- namelist.add(3, "Text")            "добавление нового элемента на позицию 3"
                    | |           |   |   +-- namelist.get("номер в списке")     "обращение к элементу"
                    | |           |   |   +-- namelist.size()                    "колличество элементов в цифрах"
                    | |           |   |   +-- namelist                           "показ всех элементов списка по имени"
                    | |           |   |   +-- list.remove(2)                     "удаление элемента 2 из списка"
                    | |           |   +-- LinkedList         "список, основанный на объектах с ссылками между ними"
                    | |           |       +-- LinkedList()   "создает пустой список (конструктор)"
                    | |           |       +-- addFirst()     "добавляет элемент в начало списка"
                    | |           |       +-- offerFirst()
                    | |           |       +-- addLast()      "добавляет элемент в конец списка"
                    | |           |       +-- offerLast()
                    | |           |       +-- removeFirst()  "удал перв элем из начала списка"
                    | |           |       +-- pollFirst()
                    | |           |       +-- removeLast()   "удал последн элем из конца списка"
                    | |           |       +-- pollLast()
                    | |           |       +-- getFirst()     "получает первый элемент"
                    | |           |       +-- peekFirst()
                    | |           |       +-- getLast()      "получает последний элемент"
                    | |           |       +-- peekLast()
                    | |           |       +-- indexOf()
                    | |           |       +-- lastIndexOf()
                    | |           |       +-- hasPrevious()      "управл итератором в обратн порядке"
                    | |           |       +-- previous()         "управл итератором в обратн порядке"
                    | |           |       +-- previousIndex()    "управл итератором в обратн порядке"
                    | |           |       +-- subList()          "манипулировать произвольным диапазоном"
                    | |           +-- Set<E>
                    | |           |   +-- HashSet                "интерфейс колекции без сортировки"
                    | |           |   |   +-- add()              "метод"
                    | |           |   |   +-- contains()         "метод"
                    | |           |   |   +-- remove()           "метод"
                    | |           |   |   +-- size()             "метод"
                    | |           |   |   +-- hashCode()         "метод"
                    | |           |   |   +-- equals()           "метод"
                    | |           |   +-- TreeSet                "тип коллекции класс - сортированный набор"
                    | |           |   |   +-- TreeMap            "инкапсулирован от TreeMap"
                    | |           |   +-- LinkedHashSet          "LIFO"
                    | |           +-- Queue<E>                   "очередь"
                    | |           |   +-- PriorityQueue          "упорядочивание эл-в по натуральному порядку"
                    | |           +-- Мар<К, V>                  "интерфейс колекции ключ значение"
                    | |               +-- HashMap                "класс основан на хэш-таблицах"
                    | |               |   +-- LinkedHashMap      "связный список элементов в карте"
                    | |               +-- NavigatebleMap
                    | |               |   +-- TreeMap            "расширяет AbstractMap"
                    | |               +-- WeakHashMap            "коллекция для слабых ссылок"
                    | +-- GENERICS
                    | +-- ИСКЛЮЧЕНИЯ
                    | |   +-- Trowable
                    | |   +-- Exception    "класс ошибки программы Обрабатываемые"
                    | |   +-- Error        "класс ошибки в языке программирования Необрабатываемые"
                    | |       +-- try      "блок с командой с возможной ошибкой"
                    | |       +-- catch    "блок с кодом ошибки результатом решения"
                    | |       +-- finally  "блок исполняется в любом случае"
                    | |       +-- throw    "ключевое слово"
                    | |       +-- throws   "ключевое слово"
                    | +-- МНОГОПОТОЧНСТЬ
                    | |   +-- Thread                                        "класс: унаследоваться класом вар.1"
                    | |       +-- public MyThred extends Thread{ "1. 2."}   "созд. клас и экстендимся от Thread"
                    | |       +-- @Override                                 "переопределяем метод run"
                    | |       +-- public void run("3.")                     "метод run"
                    | |       +-- //actions                                 "другие методы, действия"
                    | |       +-- new MyThred() start()                     "для запуска потока"
                    | |       +-- synchronized
                    | |       +-- volatile
                    | |       +-- wait()
                    | |       +-- notify()
                    | |       +-- notifyAll()
                    | +-- SERVLET
                    | +-- ДОПОЛНИТЕЛЬНО
                    |     +-- super.metod()
                    |     +-- super.field()
                    |     +-- super(args)
                    |     +-- MIN_PRIORITY-MAX_PRIORITY  "многопоточность"
                    |     +-- NORM_PRIORITY              "многопоточность"
                    |     +-- EXECUTOR
                    |     +-- THREAD: GENERAL INFO
                    |     +-- PipedOutputStream
                    |     +-- ByteArrayOutputStream
                    |     +-- ObjectOutputStream
                    |     +-- DataOutputStream
                    |     +-- BufferedOutputStream
                    |     +-- PrintStream
                    | 
                    | +-- МАТЕМАТИКА
                    | |   +-- множество
                    | |   +-- операции над множествами
                    | |   +-- функция
                    | |   +-- характеристики функции
                    | |   +-- график функций
                    | |   +-- линейная
                    | |   +-- степенная
                    | |   +-- показательная
                    | |   +-- логарифмическая функция
                    | |   +-- производная
                    | |   +-- интеграл
                    | +-- ДИСКРЕТНАЯ МАТЕМАТИКА
                    | |   +-- булева алгебра
                    | |   +-- комбинаторика
                    | |   +-- конечный автомат
                    | |   +-- машина Тьюринга
                    | |   +-- теория графов
                    | |   +-- деревья
                    | |   +-- двоичные деревья
                    | +-- ТЕОРИЯ КОМПИЛЯТОРОВ
                    |     +-- грамматика
                    |     +-- лексический анализ
                    |     +-- синтаксический анализ
                    |     +-- семантический анализ
                    |     +-- оптимизация
                    |     +-- генерация кода
                    |     +-- интерпретатор




            div#tab-content-7.tab-content
                h1 Java Examples
                textarea 2
                   | public class Main {
                   | 	public static void main(String[] args) {
                   | 		System.out.println("Hello, World!");
                   | 	}
                   | }
                   | ____________________________________________________________________
                   | import javax.swing.*;
                   | public class one {
                   |     public static void main(String[] args){
                   |         JFrame f = new JFrame("Java one");
                   |         f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                   |         f.setSize(1100, 600);
                   |         f.setVisible(true);
                   |     }
                   | }
                   | ____________________________________________________________________
                   | import javax.swing.*;
                   | import java.awt.*;
                   | 
                   | public class SimpleCalculator {
                   |     public static void main(String[] args) {
                   |         //создаем панель
                   |         JPanel windowContent = new JPanel();
                   | 
                   |         //задаем менеджер для нашей панели
                   |         FlowLayout fl = new FlowLayout();
                   |         windowContent.setLayout(fl);
                   | 
                   |         //создаем компоненты в памяти
                   |         JLabel label1 = new JLabel("Number 1:");
                   |         JTextField field1 = new JTextField(10);
                   |         JLabel label2 = new JLabel("Number :2");
                   |         JTextField field2 = new JTextField(10);
                   |         //новые кнопки начало
                   |         JLabel label3 = new JLabel("Dan");
                   |         JTextField field3 = new JTextField(10);
                   |         //новые кнопки конец
                   |         JLabel label4 = new JLabel("Sum :");
                   |         JTextField result = new JTextField(10);
                   |         JButton go = new JButton("Add");
                   | 
                   |         windowContent.add(label1);
                   |         windowContent.add(field1);
                   |         windowContent.add(label2);
                   |         windowContent.add(field2);
                   |         //новые кнопки начало
                   |         windowContent.add(label3);
                   |         windowContent.add(field3);
                   |         //новые кнопки конец
                   |         windowContent.add(label4);
                   |         windowContent.add(result);
                   |         windowContent.add(go);
                   | 
                   |         //задаем фрейм и задаем для фрейма нашу панель
                   |         JFrame frame = new JFrame("My First Calculator by Now Android");
                   |         frame.setContentPane(windowContent);
                   | 
                   |         //задаем размеры и делаем его видимым
                   |         frame.setSize(1000,100);
                   |         frame.setVisible(true);
                   |     }
                   | }
                   | ____________________________________________________________________
                   | public class dick {
                   |     public static void main(String[] args) {
                   |         int i = 3;
                   |         int k = 5;
                   |         i = count(i);
                   |         k = count(k);
                   |         System.out.println(i);
                   |         System.out.println(k);
                   |     }
                   | private static int count(int x){
                   |     x = x + 1;
                   |     return x;
                   | }
                   | }
                   | ____________________________________________________________________
                   | public class Test {
                   |     public static void main(String[] args) {
                   |         String[] catsNames = new String[10];
                   |         for (int i = 0; i<10; i++)
                   |             System.out.println(catsNames[i] = "2");
                   |     }
                   | }
                   | ____________________________________________________________________
                   | public class Test {
                   |     public static void main(String[] args) {
                   |         int a;
                   |         a = 5;
                   |         int b = a;
                   |         System.out.println(b);
                   |     }
                   | }
                   | ____________________________________________________________________
                   | public class Test {
                   |     public static void main(String[] args) {
                   |         int a,b;
                   |         a = 10;
                   |         b = 5;
                   |         int sum = a+b;
                   |         System.out.println(sum);
                   |     }
                   | }
                   | ____________________________________________________________________
                   | System.out.println(sqrt(81));// выведет 9.0 
                   | System.out.println(pow(2,10));// выведет 1024.0 
                   | System.out.println(sin(PI/2));// выведет 1.0 
                   | System.out.println(cos(PI));// выведет -1.0
                   | System.out.println(acos(-1));// выведет 3.141592653589793
                   | System.out.println(round(E));// выведет 3
                   | System.out.println(abs(-6.7));// выведет 6.7
                   | ____________________________________________________________________
                   | public class Test {
                   |     public static void main(String[] args) {
                   |         int a = 5;
                   |         int b = 10;
                   | 
                   |         if (a<b){
                   |             System.out.println("min");
                   |         }
                   |         else {
                   |             System.out.println("max");
                   |         }
                   | 	}
                   | }
                   | ____________________________________________________________________
                   | import java.util.Scanner;
                   | 
                   | public class Test {
                   |     public static void main(String[] args) {
                   |         Scanner sc = new Scanner(System.in);
                   |         int i = sc.nextInt();
                   |         System.out.println(i/3);
                   |     }
                   | }
                   | ____________________________________________________________________
                   | import java.util.Scanner;
                   | 
                   | public class Programm {
                   |     public static void main(String[] args) {
                   |         Scanner s = new Scanner(System.in);
                   |         double x = s.nextDouble();
                   |         System.out.format("%.3f%n", Math.abs(x));
                   |         System.out.format("%.3f%n", Math.sin(x));
                   |         System.out.format("%.3f%n", Math.cos(x));
                   |         System.out.format("%.3f%n", Math.sqrt(x));   //squre root
                   |         System.out.format("%.3f%n", Math.cbrt(x));   //cube root
                   |         System.out.format("%.3f%n", Math.log(x));
                   |         System.out.format("%.3f%n", Math.log10(x));
                   |         System.out.format("%.3f%n", Math.exp(x));
                   |         System.out.format("%.3f%n", Math.pow(x, Math.E));
                   |         System.out.format("%.3f%n", Math.PI*x);
                   |     }
                   | }
                   | ____________________________________________________________________
                   | import java.util.Scanner;
                   | 
                   | public class Programm {
                   |     public static void main(String[] args) {
                   |         Scanner in = new Scanner(System.in);
                   |         System.out.print("Enter your name: ");
                   |         String name = in.nextLine();
                   |         System.out.print("Enter your age: ");
                   |         int age = in.nextInt();
                   |         System.out.println("Your name: "+ name + "   Your age: " + age);
                   |     }
                   | }
                   | ____________________________________________________________________
                   | DZ
                   | 
                   | public class One {
                   |     public static void main(String[] args) {
                   |         int a;   //переменная не имеет целочисленного значения для вывода в консоль
                   |         char b;  //переменная не имеет символьного значения для вывода в консоль
                   |         System.out.println("not initialized variable (a) has no integer value");
                   |         System.out.println("not initialized variable (b) has no symbolical value");
                   |     }
                   | }
                   | ____________________________________________________________________
                   | public class Programm {
                   |     public static void main(String[] args) {
                   |         int i = 5;
                   |         i++;
                   |         System.out.println(i);
                   |     }
                   | }
                   | ____________________________________________________________________
                   | public class Main {  //создаем главный клас для запуска программы
                   |     public static void main(String[] args) {  //создаем метод mein
                   |         Dog Dog1 = new Dog();
                   |         Dog1.setSpeak("Gav");
                   |         Dog1.setName("Spot");
                   |         System.out.println("Dogi is name - " + Dog1.getName());
                   |         System.out.println("Dogi is say - "+ Dog1.getSpeak());
                   |     }
                   | }
                   | ____________________________________________________________________
                   | class Dog {  //создаем класс "собака"
                   |     private  String name;  //присваиваем атрибут имени собаки
                   |     private String speak;   //присваиваем атрибут отвечающий за гавканье (мод. доступа приват)
                   | 
                   |     //описываем метод имени собаки "Spot"
                   |     public void setName(String Dogname){  //описание метода через set
                   |         name = Dogname;
                   |     }
                   |     public String getName(){
                   |         return name;
                   |     }
                   | 
                   |     // описываем метод гавканья собаки "Gav" через строковыю переменную Speak
                   |     public void setSpeak(String Dogspeak){   //описание метода через set
                   |         speak = Dogspeak;
                   |     }
                   |     public  String getSpeak(){  //описание метода через get
                   |         return speak;
                   |     }
                   | }
                   | ____________________________________________________________________
                   | //ввод чисел орнанизовываем через сканнер
                   | //определение четности решаем методом деления на 2 через if / else
                   | 
                   | import java.util.Scanner;  //импортируем библиотеку сканер для ввода данных пользователя
                   | 
                   | public class Three {  //создаем новый клас
                   |     public static void main(String[] args) {  // создаем новый главный метод
                   |         Scanner in = new Scanner(System.in);  //создаем обьект сканер
                   |         int a = in.nextInt();  //считываем введенное число "а"
                   | 
                   |         if (a%2 == 0){  //если число дел. на 2 равно 0
                   |             System.out.println("Number " + a + " even");  //то печатаем - число  четное
                   |         }
                   |         else {  //в противном случае
                   |             System.out.println("Number " + a + " uneven");  //печатаем число нечетное
                   |         }
                   |     }
                   | }
                   | ____________________________________________________________________
                   | import java.util.Scanner;  //импортируем библиотеку сканнер для ввода чисел пользователем
                   | 
                   | public class Four {  //создаем новый класс
                   |     public static void main(String[] args) {  //создаем новый метод
                   |         Scanner in = new Scanner(System.in);  //создаем новый класс сканер
                   |         int a = in.nextInt();  //переменной а присваиваем введенное число
                   |         int b = a%10;  //делаем что то непонятное
                   |         int c = (a/10)%10;  //здесь тоже
                   |         System.out.println(b+c);  //выводим на печать сумму двух чисел составляющих первоначальное
                   |     }
                   | }
                   | ____________________________________________________________________
                   | //дробные числа вводить через англ запятую
                   | 
                   | import java.util.Scanner;  // импортируем библиотеку для сканера
                   | 
                   | public class Five {  //создаем новый клас
                   |     public static void main(String[] args) {  //создаем новый метод
                   |         Scanner in = new Scanner(System.in);  //создаем сканнер
                   |         System.out.println("Enter the first number");  //подсказка при вводе в консоль
                   |         double n = in.nextDouble();  //вводим новые переменные n в формате сканера
                   |         System.out.println("Enter the second number");  //подсказка при вводе в консоль
                   |         double m = in.nextDouble();  //вводим новую переменную m в формате сканера
                   |         double a = 10;  //вводим переменную а и присваиваем 10
                   | 
                   |         double b = Math.abs(a-n);  //вычисляем остаток
                   |         double c = Math.abs(a-m);  //вычисляем остаток
                   | 
                   |         if (b==c){  //сравниваем две переменные на равенство и выводим в печать
                   |             System.out.println("Number " + n + " and " + m + " identical for " + a);
                   |         }
                   |         if (b>c){  //сравниваем две переменные на (больше) и выводим в печать
                   |             System.out.println("Number " + m + " near to number " + a);
                   |         }
                   |         if (b<c){  //сравниваем две переменные на (меньше) и выводим в печать
                   |             System.out.println("Number " + n + "near to number" + a);
                   |         }
                   |     }
                   | }
                   | ____________________________________________________________________
                   | import java.util.Scanner;
                   | 
                   | //находим площадь и периметр треугольника
                   | public class Six {
                   |     public static void main(String[] args) {
                   |         Scanner in = new Scanner(System.in);
                   |         System.out.print("Enter the first number: ");  //вводим первое число
                   |         double a = in.nextDouble();  //переменная а - катет 1
                   |         System.out.print("Enter the second number: ");  //вводим второе число
                   |         double b = in.nextDouble();  //переменная d - катет 2
                   |         double c = (a*b)/2;  //определяем площадь (приводим к квадрату и делим по диогонали
                   |         double d = Math.sqrt(a*a+b*b);  //находим гипотенузу по формуле
                   |         double e = (a+b+d);  //сумируем два катета и гипотенузу для периметра
                   | 
                   |         System.out.println("Area of a triangle: " + c);  //выводим на печать площадь
                   |         System.out.println("Perimeter of a triangle: " + e);  //выводим на печать периметр
                   |     }
                   | }
                   | ____________________________________________________________________
                   | import java.util.Scanner;
                   | 
                   | public class Seven {
                   |     public static void main(String[] args) {
                   |         Scanner in = new Scanner(System.in);
                   |         System.out.print("Enter the first number: ");  //вводим первое число
                   |         double a = in.nextDouble();  //первая переменная а
                   |         System.out.print("Enter the second number: ");  //вводим второе число
                   |         double b = in.nextDouble();  //вторая переменная
                   |         System.out.print("Enter the next number: ");  //вводим следующую переменную
                   |         double c = in.nextDouble();  //переменная три
                   | 
                   |         double x1;  //вводим непроинициализированные переменные
                   |         double x2;  //вводим непроинициализированные переменные
                   | 
                   |         double d = b*b-4*a*c;  //уравнение типа
                   |         if (d >= 0){  //если d больше или равно 0 то...
                   |             x1 = (-b + Math.sqrt(d))/(2*a);  //матем. расчеты
                   |             x2 = (-b - Math.sqrt(d))/(2*a);  //матем. расчеты
                   |             System.out.println("x1: " + x1 + ", x2: " + x2);  //выводим результат в консоль
                   |         }
                   |         else {  //а если нет то ...
                   |             System.out.println("Equation has no solution");  //печатаем в консоль (уравнение не имеет решения)
                   |         }
                   |     }
                   | }
                   | ____________________________________________________________________
                   | //сохранить несколько числовых данных в одно число с последующим выводом по отдельности
                   | public class Eight {
                   |     public static void main(String[] args) {
                   |         int age, height, weight, combined, mask;  //обьявляем переменные возраста роста веса комбинации и маски
                   | 
                   |         age = 31;    //00011111
                   |         height = 175;  //10101111
                   |         weight = 75;   //01001011
                   | 
                   |         combined = (age) | (height << 8) | (weight << 16);  //00011111  10101111  01001011 (обьединяем)
                   | 
                   |         mask = 0b11111111;  //результат сведения трех переменных
                   | 
                   |         System.out.printf("Age: %d, height: %d, weight: %d",  //выводим на печать
                   |                 mask & combined,
                   |                 mask & combined >>> 8,
                   |                 mask & combined >>> 16);
                   |             }
                   | }
                   | ____________________________________________________________________
                   | import java.util.Scanner;
                   | 
                   | public class Proba {
                   |     public static void main(String[] args) {
                   | 
                   |         System.out.println("Enter namber: ");
                   | 
                   |         Scanner in = new Scanner(System.in);  //создаем клас сканнер числа a
                   |         int a = in.nextInt();
                   | 
                   |         int s = 0;   //обьявляем дополнительную переменную
                   |         for (int i = 0; i < 4; i++) {   //i<4  4 - количество цифр в числе
                   |             s += a % 10;
                   |             a /= 10;
                   |         }
                   |         System.out.println("Sum: " + s);
                   |     }
                   | }
                   | ____________________________________________________________________
                   | public class Proba {
                   |     public static void main(String[] args) {
                   |         int i = 5; switch (i) {
                   |             case 4:
                   |             case 6:
                   |                 System.out.println("not");
                   |                 break;
                   |             case 5:
                   |                 System.out.println("yes");
                   |         }
                   |     }
                   | }
                   | ____________________________________________________________________
                   | public class Proba {
                   |     public static void main(String[] args) {
                   |         int d;
                   |         int m;
                   |         int y;
                   |         int i = 29041984;
                   | 
                   |         d = i/1000000;
                   |         m = i/10000;
                   |         y = i%10000;
                   | 
                   |         System.out.println(d);
                   |         System.out.println(m%100);
                   |         System.out.println(y);
                   |     }
                   | }
                   | ____________________________________________________________________
                   | public class Proba {
                   |     public static void main(String[] args) {
                   |         int i = 50;
                   |         int j = i<<2;
                   |         System.out.println(j);
                   |     }
                   | }
                   | ____________________________________________________________________
                   | class Cat {  //клас  с тремя конструкторами
                   |     int age;
                   |     int birthday;
                   |     
                   |     // Инициализируем переменные явно
                   |     Cat(int i, int j) {
                   |         age = i;
                   |         birthday = j;
                   |     }
                   |     
                   |     // Инициализируем переменные одним и тем значением
                   |     Cat(int i) {
                   |         age = i;
                   |         birthday = i;
                   |     }
                   |     
                   |     // Присвоим значения по умолчанию 0
                   |     Cat() {
                   |         age = 0;
                   |         birthday = 0;
                   |     }
                   | }
                   | ____________________________________________________________________
                   | public class LastSymbol {
                   |     public static void main(String[] args) {
                   |         String mjQuote = "I'm failed over and over again in my life and that is why I succeed!";
                   |         System.out.println(mjQuote.charAt(mjQuote.length()-1));
                   |     }
                   | }
                   | ____________________________________________________________________
                   | import java.util.Scanner;  //загрузка библиотеки
                   | 
                   | public class Square {
                   |     public static void main(String[] args) {
                   | 
                   |         Scanner in = new Scanner(System.in);  // in - имя обьекта сканнер
                   |         int  x1 = in.nextInt();  //метод in.nextInt() возврат числа с клавы
                   |         int  y1 = in.nextInt();
                   |         int  x2 = in.nextInt();
                   |         int  y2 = in.nextInt();
                   |         int  x3 = in.nextInt();
                   |         int  y3 = in.nextInt();
                   | 
                   |         int A = x1-x3;
                   |         int B = y2-y3;
                   |         int C = x2-x3;
                   |         int D = y1-y3;
                   | 
                   |         int var = A*B-C*D;
                   | 
                   |         int S = (int) (0.5*var);
                   | 
                   |         System.out.println(S);
                   |         
                   |     }
                   | }
                   | Площадь треугольника по координатам его вершин A(x1,y1), B(x2,y2), C(x3,y3) вычисляется по формуле: 
                   | S=0,5*[(x1-x3)(y2-y3)-(x2-x3)(y1-y3)]. 
                   | ____________________________________________________________________
                   | 
                   | public class Test {
                   |     public static void main(String[] args) {
                   |         int i;
                   |         for (i=0; i<3; i++) switch (i){
                   |             case 0: System.out.println("i=0");
                   |             case 1:
                   |                 System.out.println("i=1");
                   |             case 2:
                   |                 System.out.println("i=2");
                   |                 break;
                   |         }
                   |     }
                   | }
                   | ____________________________________________________________________





















        

    section.tabContent 
        h1 SQL
        br
        textarea
            | # указать какую базу данных использовать
            | USE db_name;
            | # создать базу данных
            | CREATE DATABASE db_name;
            | # создать таблицу
            | CREATE TABLE name_tab (
            | 	id int, 
            | 	colum_1 varchar(10), 
            | 	colum_2 varchar(10)
            | );
            | # заполнить таблицу данными
            | INSERT INTO name_tab VALUES (
            | 	1,
            | 	'name_1',
            | 	'name_2'
            | );
        textarea
            | #.SQL
            | "показать таблицы"
            | SHOW TABLES;
        textarea
            | "структура таблицы"
            | DESC name_tab;
        textarea
            | "удалить базу данных"
            | DROP DATABASE name_db;
        textarea
            | "удалить таблицу"
            | DROP TABLE name_tab;
        textarea
            | "новая таблица с id и name"
            | CREATE TABLE name_tab
            | (
            | ID int(5) primary key NOT NULL AUTO_INCREMENT,
            | 	NAME varchar (20),
            | 	EMAIL varchar(50),
            | 	PHONE  int(50)
            | );
        textarea
            | "вставка в каждое поле данных"
            | INSERT INTO name_tab VALUE (
            | 1,
            | 'name_one',
            | '@gmail.com',
            | 123
            | );
        textarea
            | "вставка в определенное поле данных"
            | INSERT INTO name_tab (NAME, EMAIL) VALUE (
            | 'first',
            | '@mail.ru'
            | );
        textarea
            | "показать все в таблице"
            | SELECT * FROM name_tab;
        textarea
            | "показать колонку name и email"
            | SELECT name, email FROM name_tab;
        textarea
            | "обновление существующих полей"
            | UPDATE name_tab SET PHONE=0973371430 WHERE id='3';
        textarea
            | "вывести все поля name, email с индексом phone = 123"
            | SELECT name, email FROM name_tab
            | WHERE phone = 123;
        textarea
            | "вывести все поля id с где phone = 0973371430"
            | SELECT id FROM name_tab
            | WHERE phone IN (0973371430);
        textarea
            | "вывести все id где rate между 50 и 100"
            | SELECT id FROM name_tab
            | WHERE rate BETWEEN 50 AND 100;
        textarea
            | "вывести все id где нет rate между 50 и 100"
            | SELECT id FROM name_tab
            | WHERE NOT rate BETWEEN 50 AND 100;
        textarea
            | "удалить всё из таблицы где в поле rate > 5"
            | DELETE FROM name_tab
            | WHERE rate > 5;
        textarea
            | "обновить поле rate присвоить 100 с именем name_one "
            | UPDATE name_tab SET
            | rate = 100
            | WHERE name = 'name_one';


    section.tabContent 
        h1 Shell
        br
        textarea
            | ---Pug-------------------------------------------------------------------------
            | npm install -g jade   //установка
            | pug -w index.pug      // команда компиляции index.pug > index.html
        textarea
            | ---Stylus----------------------------------------------------------------------
            | npm install stylus -g       //установка
            | stylus -w name_file.styl    //компиляция в css и слежение
        textarea
            | ---Vue/Nuxt--------------------------------------------------------------------
            | npm install -g vue-cli          //установка cli
            | vue init nuxt-community/starter-template project-name  //уст. шаблона vue-cli
            | cd project-name                 //создать папку проекта
            | npm install                     //установка завиимостей
            | npm run dev                     //запуск проекта
            | http://localhost:3000           //адресс проекта
        textarea
            | ---PIP (Python)----------------------------------------------------------------
            | pip install package_name
            | pip install grab
            | pip install tqdm
        textarea
            | ---Server----------------------------------------------------------------------------
            | npm i http-server -g  //установка сервера
            | http-server  //запуск сервера на node
        textarea
            | ---Jango-------------------------------------------------------------------------------
            | pip install Django  //установка джанго в пустой каталог
            | django-admin.py startproject django_test //создание каталога проекта
            | python manage.py runserver
        textarea
            | http://127.0.0.1:8000/
        textarea
            | python manage.py startapp landing   //создание страниц сайта
            | python manage.py createsuperuser  // регистрация суперпользователя
            | python manage.py makemigrations news  //создание записей в базе данных в приложении news
            | python manage.py migrate //перенос базы данных
        textarea
            | ---UNIX-------------------------------------------------------------------------
            | cd /d  //перейти на диск d
            | cd name_folder  //перейти в папку
            | cd ..   //подняться на 1 папку назад
            | cd ~   //пернйти в домашнюю директорию
            | pwd   //показать диск
            | exit  //выйти из программы
        textarea
            | ls  //список файлов
            | ls -a  //список всех файлов
            | ls -la  //список всех файлов с датами
            | ls -arial  //что то
            | clear  //очистить экран
        textarea
            | mkdir folder         //создать папку
            | rmdir folder         //удалить папку
            | rm -r folder_file    //удалить папку с файлами
            | touch file.txt       //создать файл
            | rm file.txt          //удалить файл
            | del test.txt         //удалить файл
            | echo "text" > 1.txt  //создать файл текст с текстом внутри
            | cat file.txt         //посмотреть содержимое файла
            | type test.txt        //просмотр содержимого файла
        textarea
            | start file.txt       //запуск файла
            | start folder         //открытие папки в новом окне
            | start soft.exe       //открытие программы
        textarea
            | df показать список всех файловых систем
            | ps активные процессы
        textarea
            | ---GIT-------------------------------------------------------------------------
            | git clone www.   //скачать репозиторий 
            | git pull origin  //Замерджить все ветки с удаленного репозитория:
        textarea
            | git init           //создание подпапки в рабочей папке проекта
            | git remote add origin https://github.com/Aleksej579/Kanban.git
            | git add .          // добавление файлов на отправку 
            | (git rm --cached name_file.txt  //удалить файл перед комитом и предвар)
            | git status         //просмотр добавленных файлов в локальный репозиторий"
            | (git log           //просмотр комитов)
            | (git remote -v     //список репозиториев с сылками)
            | git commit -m "text_commit"  //закомичивание
            | git push -u origin master    //отправка файлов в гит
        textarea
            | git branch some_branch       //Создать новый бранч
            | git checkout some_branch     //Переключиться на другую ветку
        textarea
            | git config --global user.email "aleksej.eremenko579@gmail.com"
            | git config --global user.name "Aleksej579"
        textarea
            | ---git flow---------------------------------------------------------------------
            | git flow init  //инициализация проекта
            | //Фичи
            | git flow feature start MYFEATURE          //Начало новой фичи
            | git flow feature finish MYFEATURE         //Завершение фичи
            | git flow feature publish MYFEATURE        //Публикация фичи
            | git flow feature pull origin MYFEATURE    //Получение опубликованной фичи
            | git flow feature track MYFEATURE          //Вы можете отслеживать фичу в репозитории origin с помощью команды 
            | //Создание релиза
            | git flow release                          //Начало релиза
            | git flow release start RELEASE [BASE]
            | git flow release publish RELEASE          //Желательно сразу публиковать ветку релиза после создания
            | git flow release track RELEASE            //отслеживать удалённый релиз
            | git flow release finish RELEASE           //Завершение релиза
            | git push --tags                           //отправить изменения в тегах
            | //Исправления
            | git flow hotfix start VERSION [BASENAME]  //работа над исправлением 
            | git flow hotfix finish VERSION            //Завершение исправления
        textarea
            | git flow
            | init / feature / release / hotfix
            | start / finish / publish / pull
            | NAME
        textarea
            | //ветки 
            | feature/myfeature
            | develop
            | release
            | master
            | hotfix
        textarea
            | ---"Bat"------------------------------------------------------
            | /?         //имя команды и /? что бы узнать все о ней
            | tree       //древовидный список файлов.
            | F7         //история введенных команд
            | Alt + F7   //очищает историю команд
            | cls        //очистить окно.
            | exit       //выход.
            | c:         //перейти на диск c: (c: d: f:)
            | cd..       //на уровень выше
            | d: имя п.  //Перейти на диск "d" (или "с") в папку "имя п."
            | dir /b     //cписок файлов текущего каталога (c: или d: dir /b)
            | dir C:\    //просмотр содержимого каталога;
            | md D:\Папка              //создание папки в указанном каталоге
            | md D:\Папка_1 Папка_2    //создать две папки
            | md D:\Папка_1\Папка_2    //создать папку а вней еще одну
            | rd                       //уничтожение каталога (rd d:games)
            | copy con                 //Создание текстовых файлов (Copy con games.txt), F6 и ENTER
            | copy con name_file.txt   //+ctrl+z<enter> создать файл
            | copy                     //Копирование файлов (Copy games.txt games)
            | del                      //Удаление файлов (Del games.txt)
            | ren                      //Переименование файлов (Ren games.txt games.doc)
            | XCOPY c:\папка_1 c:\папка_2 /m /e /y   //копирование из папки в папку
            | start C:\Папка                         //открыть папку
            | start ""                               //C:\Program Files (x86)\Opera\launcher.exe" "http:// запуск опера с указанным сайтом
            | /min                                   //запуск в свернутом режиме; start ""/min"C:\Windows\notepad.exe"
            | /max                                   //запуск в развернутом режиме;
            | @echo off      //запрещает вывод всех команд на экран
            | @echo Текст    //вывод текста на экран
            | for            //цикл, выполняет команду указанное количество раз
            | do             //указывает, что делать
            | @pause         //для продолжения нажать любую клавишу
            | /wait          //по завершению первой программы запускается вторая; 
            | rem Текст      //коментарий
            | :: Текст       //коментарий
            | команда_1 & команда_2        //вып. ком. 1, затем ком. 2 (start calc & start notepad)
            | команда_1 && команда_2       //если ком. 1 вып. то ком. 2 вып.
            | команда_1 || команда_2       //если ком. 1 не вып. то ком. 2 вып.
            | >                            //вывести.
            | echo %переменная или текст%  //вывод времени.
            | set /a r=5+5                 //математические операции.
            | defrag c: -f                    //дефрагментация ( defrag c: или d: -f )
            | chkdsk c: /f                    //исправление ошибок на диске (chkdsk c: или d: /f или r )
            | tasklist                        //Список процесов
            | taskkill /f /im имя.проц. /t    //Завершить процес по имени
            | systeminfo                      //мониторинг системы
            | shutdown -s -t "секунды"        // выключение
            | shutdown -a                     //отмена выключения
            | format c: d: e:                 //форматирование. (format e: /q) быстрое ф
            | explorer   //мои документы
            | regedit    //редактор реестра
            | msconfig   //настройка системы    
            | regedit    //редактор реестра  
        textarea
            | ---WGET--------------------------------------------------------------------------------------
            | wget -i list.txt                        //загрузка всех файлов указыных www в файле list
            | wget -r -k -l 7 -p -E -nc http://dogs-bomba-net.nethouse.ru    //скопировать сайт целиком

        textarea 
            |   webpack
            |   # Внесем информацию об авторе "по умолчанию"
            | npm set init.author.name "$NAME"
            | npm set init.author.email "$EMAIL"
            | npm set init.author.url "$SITE"
            |   # Все, можно передавать в продакшен
            | npm shrinkwrap
            |   # Устанавливает все пакеты, перечисленные в package.json
            | npm install
            |   # Выведет список всех возможных настроек
            | npm config ls -l
            |   # Бывает полезно сделать прежде чем делать update
            | npm outdated
            | 
            | # NPM вполне может обновлять сама себя
            | npm update npm -g
            | 
    section.tabContent 
        h1 Keyword
        br
        textarea
            | ---START--------------------------------------------------------------------
            | Win+1  ������ Far
            | Alt+F9 ���� �� ���� �����
        textarea
            | ---"WIN"--------------------------------------------------------------------
            | Win+Ctrl+D  ����� ������� ����
            | Win+Ctrl+-> ����� �������� �����
            | Win+Ctrl+F4 ������� ����������� ������� ����
        textarea
            | ---"FAR"---------------------------------------------------------------------
            | TAB;        ����� �������� ������
            | Ctrl-U;     �������� ������ �������
            | Ctrl-F1;    ����� ����� ������
            | Ctrl-F2;    ����� ������ ������
            | Alt-F1;     ����� ����� ����� ������
            | Alt-F2;     ����� ����� ������ ������
            | Ctrl-L;     ����� �������������� ������
            | Ctrl-Q;     ����� ������ �������� ��������� �����
            | Shift-F4;   ������� ��������� ����
            | Ctrl-Y;     ������� ������
            | Shift-F2;   ��������� ���� ��� ������ ������
            | Ctrl-F7;    ������ ���� ��������� ����� �� ������
            | Alt-F8;     ������� ������ 
            | Ctrl+. ;    ������ �������






    section.tabContent 
        h1 GLITCH
        hr
        div.glitch(data-text="GLITCH") GLITCH
        h1 3d
        hr
        div.box3d_wrp
            div#box3d
                div#box3d_c
                    span.s1 NATURE
                div#box3d_l
                    span.s1 SCULPTURE
                div#box3d_t
                    span.s1 ART
                div#box3d_r
                    span.s1 WEAPON

            div#but_box3d_1(onclick="rot_box_nature_1();") Click 1
            div#but_box3d_2(onclick="rot_box_nature_2();") Click 2
            div#but_box3d_3(onclick="rot_box_nature_3();") Click 3
            div#but_box3d_4(onclick="rot_box_nature_4();") Click 4
        h1 BUTTON
        hr
        div.fon 
            div.btn-white-submit Submit
            div.btn-box_1 text
            div.enter_the_data
                p.name-box_gray Enter the data
                input.txtar_2(type="number" onchange="c()" id="wi" placeholder="building width")
                input.txtar_2(type="number" onchange="c()" id="len" placeholder="building length")

        h1 terminal
        hr
        div#button_terminal(onclick="Console_On_Off('terminal')") CONSOLE
        div#terminal
            div#output.output
            textarea#input.input(placeholder="Enter the commands :") 

        h1 Grid
        div.wrapper_2.elementanm
            div.grid-wrap
                div.grid.anim

    section.tabContent 
        h1 Alexey Eremenko
        img(src="images/photoCV.jpg", height="255", alt="")
        h1 HTML / CSS Developer
        table
            tr
                td.b Location:
                td.i Kharkov, Ukraine.
            tr
                td.b Phone:
                td.i +38 097 337 14 28
            tr
                td.b E-mail:
                td.i aleksej.eremenko579@gmail.com
            tr
                td.b Skype:
                td.i aleksej5792
            tr
                td.b github:
                td.i github.com/Aleksej579
            tr
                td.b linkedin:
                td.i linkedin.com/in/aleksejeremenko097337142

        h1 Goal:
        p.styleArialBlack Position of HTML/CSS Developer, with the possibility of professional Growth
        h1 Skills and knowledge:

        table
            tr
                td.styleSourceCode +-- 
                td.styleArialBlack 
                    u UI design :
            tr
                td.styleSourceCode |   
                td.styleSourceCode +-- 
                    span.styleArialBlack Mockups 
                    span.styleOpenSansItalic ( use  https://app.moqups.com  or  photoshop )
            tr
                td.styleSourceCode |  
            tr
                td.styleSourceCode +-- 
                td.styleArialBlack 
                    u Markup :
            tr
                td.styleSourceCode |   
                td.styleSourceCode +-- 
                    span.styleArialBlack HTML5
                    span.styleOpenSansItalic   &  Markdown  ( use on github )
            tr
                td.styleSourceCode |   
                td.styleSourceCode |  
                    span.colorTr --
                    span.styleSourceCode +-- 
                    span.styleArialBlack Pug 
                    span.styleOpenSansItalic preprocessor ( write on PUG with compilation in HTML )
            tr
                td.styleSourceCode |   
                td.styleSourceCode +-- 
                    span.styleArialBlack CSS3
            tr
                td.styleSourceCode |   
                td.styleSourceCode |
                    span.colorTr ---
                    span.styleSourceCode +-- 
                    span.styleArialBlack Stylus 
                    span.styleOpenSansItalic preprocessor ( write on Stylus  with compilation in CSS )
            tr
                td.styleSourceCode |   
                td.styleSourceCode 
                    span.styleSourceCode +-- 
                    span.styleArialBlack UiKit 
                    span.styleOpenSansItalic CSS framework  ( rarely use )
            tr
                td.styleSourceCode |  
            
            tr
                td.styleSourceCode +-- 
                td.styleArialBlack 
                    u Programming language :
            tr
                td.styleSourceCode |   
                td.styleSourceCode +-- 
                    span.styleArialBlack JavaScript   ES6  
                    span.styleOpenSansItalic ( study )
            tr
                td.styleSourceCode |   
                td.styleSourceCode |   
                    span.styleSourceCode +-- 
                    span.styleArialBlack Vue.js  
                    span.styleOpenSansItalic ( basic knowledge )  &  Jquery ( plugins integration )
            tr
                td.styleSourceCode |   
                td.styleSourceCode +-- 
                    span.styleArialBlack Python 
                    span.styleOpenSansItalic ( basic knowledge , use in small pet-projects )
            tr
                td.styleSourceCode |
            
            tr
                td.styleSourceCode +-- 
                td.styleArialBlack 
                    u Methodology :
            tr
                td.styleSourceCode |   
                td.styleSourceCode +-- 
                    span.styleArialBlack SMACSS  &  BEM  
                    span.styleOpenSansItalic (the organization of CSS modules and naming rules in the code)
            tr
                td.styleSourceCode |   
                td.styleSourceCode +-- 
                    span.styleArialBlack DRY & KISS & YAGNI 
                    span.styleOpenSansItalic ( general approach to the development )
            tr
                td.styleSourceCode |   
                td.styleSourceCode +-- 
                    span.styleArialBlack OOP & SOLID  
                    span.styleOpenSansItalic ( study,  but did not use )
            tr
                td.styleSourceCode | 

            tr
                td.styleSourceCode +-- 
                td.styleArialBlack 
                    u Additional technologies :
            tr
                td.styleSourceCode 
                td.styleSourceCode +-- 
                    span.styleArialBlack Shell :  Unix & Cmd 
                    span.styleOpenSansItalic ( little skill;  knowledge of basic commands )
            tr
                td.styleSourceCode 
                td.styleSourceCode +-- 
                    span.styleArialBlack Build Systems :  Webpack 
                    span.styleOpenSansItalic ( study,  but did not use )
            tr
                td.styleSourceCode 
                td.styleSourceCode +-- 
                    span.styleArialBlack Package Manager :  Npm  &  Pip 
                    span.styleOpenSansItalic ( little use )
            tr
                td.styleSourceCode 
                td.styleSourceCode +-- 
                    span.styleArialBlack Version control system :  Git   
                    span.styleOpenSansItalic https://github.com/Aleksej579
            tr
                td.styleSourceCode 
                td.styleSourceCode +-- 
                    span.styleArialBlack Database :  MySQL  &  SQLite 
                    span.styleOpenSansItalic ( used in conjunction with PHP & Python  )
            
        h1 Software:
        p.styleArialBlack Development environment :  Visual studio code, DevTools, DBeaver, FAR, Shell .
        p.styleArialBlack Graphics editor :  Photoshop .
        br
        h1 Foreign languages:
        p.styleArialBlack English: Pre-Intermediate.
        br
        h1 Summary:
        p.styleArialBlack Understanding of software development life cycle, web application process;
        p.styleArialBlack Experience in creating web application;
        p.styleArialBlack Understanding of client-server architecture;
        p.styleArialBlack Team player, self motivated, quick learner, hardworker, attentive to details.
        br
        h1 Education:
        p.styleArialBlack Kharkov State Technical University of Construction and Architecture.
        p.styleArialBlack (Architecture of buildings and structures in 2007).
        br
        h1 Additional education: 
        p.styleArialBlack Source IT "Java programming & Web technologies"
        br
        h1 Еxperience:
        p.styleArialBlack Freelance (2016 - 2018) – web development.
        br
        h1 My project:
        a(href="http://maintoexamine.eu3.org" target="_blank").styleArialBlack.u http://maintoexamine.eu3.org/
        br
        a(href="http://istar.eu5.net" target="_blank").styleArialBlack.u http://istar.eu5.net
        br
        a(href="http://naturetour.eu3.biz" target="_blank").styleArialBlack.u http://naturetour.eu3.biz
        br
        a(href="http://sho-studio.eu3.org" target="_blank").styleArialBlack.u http://sho-studio.eu3.org
        br
        a(href="http://itmemigration.eu3.biz" target="_blank").styleArialBlack.u http://itmemigration.eu3.biz
        br
        a(href="https://aleksej579.github.io" target="_blank").styleArialBlack.u https://aleksej579.github.io
        br
        a(href="https://github.com/Aleksej579/dogs-bomba" target="_blank").styleArialBlack.u https://github.com/Aleksej579/dogs-bomba
        br
        a(href="https://github.com/Aleksej579/python_ticket_price" target="_blank").styleArialBlack.u https://github.com/Aleksej579/python_ticket_price
        br
        a(href="https://github.com/Aleksej579/Kanban" target="_blank").styleArialBlack.u https://github.com/Aleksej579/Kanban
        br

    section.tabContent 
        h1 Pri_Va_te
        h3 music
        hr
        p Ex_Machina.
        audio(src="images/audio/Ex_Machina.mp3" controls="controls")
        p Иллюзияобмана "Theme".
        audio(src="images/audio/Иллюзия_обмана_Theme.mp3" controls="controls")

        br
        h3 video 
        hr
        iframe(width="auto" height="200" src="https://www.youtube.com/embed/fmI_Ndrxy14?ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen)
        iframe(width="auto" height="200" src="https://www.youtube.com/embed/V5M2WZiAy6k?ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen)
        iframe(width="auto" height="200" src="https://www.youtube.com/embed/D3sg1sDhX0U?ecver=1" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen)
        video(width="480" controls poster="images/video/vid.mp4")
            source(src="images/video/vid.mp4")
        br
        h3 photo

        hr
        br
        
        


            


        

    a(href="#" title="Вернуться к началу" class="topbutton") Наверх
footer 
    p.p_footer pug -w index.pug & stylus -w main.styl

    
    script(src="javascript/main.js")
